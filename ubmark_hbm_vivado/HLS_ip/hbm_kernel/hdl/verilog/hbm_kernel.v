// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1.2 (64-bit)
// Version: 2022.1.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hbm_kernel_hbm_kernel,hls_ip_2022_1_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433090,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=17648,HLS_SYN_LUT=16938,HLS_VERSION=2022_1_2}" *)

module hbm_kernel (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] maxi;
wire   [31:0] size;
wire   [31:0] pattern;
wire   [31:0] range_r;
reg   [63:0] maxi_read_reg_224;
reg   [8:0] buffer_address0;
reg    buffer_ce0;
wire   [511:0] buffer_q0;
reg   [8:0] buffer_address1;
reg    buffer_ce1;
reg    buffer_we1;
reg   [511:0] buffer_d1;
wire    grp_random_read_write_fu_124_ap_start;
wire    grp_random_read_write_fu_124_ap_done;
wire    grp_random_read_write_fu_124_ap_idle;
wire    grp_random_read_write_fu_124_ap_ready;
wire    grp_random_read_write_fu_124_m_axi_gmem_AWVALID;
wire   [63:0] grp_random_read_write_fu_124_m_axi_gmem_AWADDR;
wire   [0:0] grp_random_read_write_fu_124_m_axi_gmem_AWID;
wire   [31:0] grp_random_read_write_fu_124_m_axi_gmem_AWLEN;
wire   [2:0] grp_random_read_write_fu_124_m_axi_gmem_AWSIZE;
wire   [1:0] grp_random_read_write_fu_124_m_axi_gmem_AWBURST;
wire   [1:0] grp_random_read_write_fu_124_m_axi_gmem_AWLOCK;
wire   [3:0] grp_random_read_write_fu_124_m_axi_gmem_AWCACHE;
wire   [2:0] grp_random_read_write_fu_124_m_axi_gmem_AWPROT;
wire   [3:0] grp_random_read_write_fu_124_m_axi_gmem_AWQOS;
wire   [3:0] grp_random_read_write_fu_124_m_axi_gmem_AWREGION;
wire   [0:0] grp_random_read_write_fu_124_m_axi_gmem_AWUSER;
wire    grp_random_read_write_fu_124_m_axi_gmem_WVALID;
wire   [511:0] grp_random_read_write_fu_124_m_axi_gmem_WDATA;
wire   [63:0] grp_random_read_write_fu_124_m_axi_gmem_WSTRB;
wire    grp_random_read_write_fu_124_m_axi_gmem_WLAST;
wire   [0:0] grp_random_read_write_fu_124_m_axi_gmem_WID;
wire   [0:0] grp_random_read_write_fu_124_m_axi_gmem_WUSER;
wire    grp_random_read_write_fu_124_m_axi_gmem_ARVALID;
wire   [63:0] grp_random_read_write_fu_124_m_axi_gmem_ARADDR;
wire   [0:0] grp_random_read_write_fu_124_m_axi_gmem_ARID;
wire   [31:0] grp_random_read_write_fu_124_m_axi_gmem_ARLEN;
wire   [2:0] grp_random_read_write_fu_124_m_axi_gmem_ARSIZE;
wire   [1:0] grp_random_read_write_fu_124_m_axi_gmem_ARBURST;
wire   [1:0] grp_random_read_write_fu_124_m_axi_gmem_ARLOCK;
wire   [3:0] grp_random_read_write_fu_124_m_axi_gmem_ARCACHE;
wire   [2:0] grp_random_read_write_fu_124_m_axi_gmem_ARPROT;
wire   [3:0] grp_random_read_write_fu_124_m_axi_gmem_ARQOS;
wire   [3:0] grp_random_read_write_fu_124_m_axi_gmem_ARREGION;
wire   [0:0] grp_random_read_write_fu_124_m_axi_gmem_ARUSER;
wire    grp_random_read_write_fu_124_m_axi_gmem_RREADY;
wire    grp_random_read_write_fu_124_m_axi_gmem_BREADY;
wire   [8:0] grp_random_read_write_fu_124_buffer_r_address0;
wire    grp_random_read_write_fu_124_buffer_r_ce0;
wire   [8:0] grp_random_read_write_fu_124_buffer_r_address1;
wire    grp_random_read_write_fu_124_buffer_r_ce1;
wire    grp_random_read_write_fu_124_buffer_r_we1;
wire   [511:0] grp_random_read_write_fu_124_buffer_r_d1;
wire    grp_random_write_fu_138_ap_start;
wire    grp_random_write_fu_138_ap_done;
wire    grp_random_write_fu_138_ap_idle;
wire    grp_random_write_fu_138_ap_ready;
wire    grp_random_write_fu_138_m_axi_gmem_AWVALID;
wire   [63:0] grp_random_write_fu_138_m_axi_gmem_AWADDR;
wire   [0:0] grp_random_write_fu_138_m_axi_gmem_AWID;
wire   [31:0] grp_random_write_fu_138_m_axi_gmem_AWLEN;
wire   [2:0] grp_random_write_fu_138_m_axi_gmem_AWSIZE;
wire   [1:0] grp_random_write_fu_138_m_axi_gmem_AWBURST;
wire   [1:0] grp_random_write_fu_138_m_axi_gmem_AWLOCK;
wire   [3:0] grp_random_write_fu_138_m_axi_gmem_AWCACHE;
wire   [2:0] grp_random_write_fu_138_m_axi_gmem_AWPROT;
wire   [3:0] grp_random_write_fu_138_m_axi_gmem_AWQOS;
wire   [3:0] grp_random_write_fu_138_m_axi_gmem_AWREGION;
wire   [0:0] grp_random_write_fu_138_m_axi_gmem_AWUSER;
wire    grp_random_write_fu_138_m_axi_gmem_WVALID;
wire   [511:0] grp_random_write_fu_138_m_axi_gmem_WDATA;
wire   [63:0] grp_random_write_fu_138_m_axi_gmem_WSTRB;
wire    grp_random_write_fu_138_m_axi_gmem_WLAST;
wire   [0:0] grp_random_write_fu_138_m_axi_gmem_WID;
wire   [0:0] grp_random_write_fu_138_m_axi_gmem_WUSER;
wire    grp_random_write_fu_138_m_axi_gmem_ARVALID;
wire   [63:0] grp_random_write_fu_138_m_axi_gmem_ARADDR;
wire   [0:0] grp_random_write_fu_138_m_axi_gmem_ARID;
wire   [31:0] grp_random_write_fu_138_m_axi_gmem_ARLEN;
wire   [2:0] grp_random_write_fu_138_m_axi_gmem_ARSIZE;
wire   [1:0] grp_random_write_fu_138_m_axi_gmem_ARBURST;
wire   [1:0] grp_random_write_fu_138_m_axi_gmem_ARLOCK;
wire   [3:0] grp_random_write_fu_138_m_axi_gmem_ARCACHE;
wire   [2:0] grp_random_write_fu_138_m_axi_gmem_ARPROT;
wire   [3:0] grp_random_write_fu_138_m_axi_gmem_ARQOS;
wire   [3:0] grp_random_write_fu_138_m_axi_gmem_ARREGION;
wire   [0:0] grp_random_write_fu_138_m_axi_gmem_ARUSER;
wire    grp_random_write_fu_138_m_axi_gmem_RREADY;
wire    grp_random_write_fu_138_m_axi_gmem_BREADY;
wire   [8:0] grp_random_write_fu_138_buffer_r_address0;
wire    grp_random_write_fu_138_buffer_r_ce0;
wire    grp_random_read_fu_152_ap_start;
wire    grp_random_read_fu_152_ap_done;
wire    grp_random_read_fu_152_ap_idle;
wire    grp_random_read_fu_152_ap_ready;
wire    grp_random_read_fu_152_m_axi_gmem_AWVALID;
wire   [63:0] grp_random_read_fu_152_m_axi_gmem_AWADDR;
wire   [0:0] grp_random_read_fu_152_m_axi_gmem_AWID;
wire   [31:0] grp_random_read_fu_152_m_axi_gmem_AWLEN;
wire   [2:0] grp_random_read_fu_152_m_axi_gmem_AWSIZE;
wire   [1:0] grp_random_read_fu_152_m_axi_gmem_AWBURST;
wire   [1:0] grp_random_read_fu_152_m_axi_gmem_AWLOCK;
wire   [3:0] grp_random_read_fu_152_m_axi_gmem_AWCACHE;
wire   [2:0] grp_random_read_fu_152_m_axi_gmem_AWPROT;
wire   [3:0] grp_random_read_fu_152_m_axi_gmem_AWQOS;
wire   [3:0] grp_random_read_fu_152_m_axi_gmem_AWREGION;
wire   [0:0] grp_random_read_fu_152_m_axi_gmem_AWUSER;
wire    grp_random_read_fu_152_m_axi_gmem_WVALID;
wire   [511:0] grp_random_read_fu_152_m_axi_gmem_WDATA;
wire   [63:0] grp_random_read_fu_152_m_axi_gmem_WSTRB;
wire    grp_random_read_fu_152_m_axi_gmem_WLAST;
wire   [0:0] grp_random_read_fu_152_m_axi_gmem_WID;
wire   [0:0] grp_random_read_fu_152_m_axi_gmem_WUSER;
wire    grp_random_read_fu_152_m_axi_gmem_ARVALID;
wire   [63:0] grp_random_read_fu_152_m_axi_gmem_ARADDR;
wire   [0:0] grp_random_read_fu_152_m_axi_gmem_ARID;
wire   [31:0] grp_random_read_fu_152_m_axi_gmem_ARLEN;
wire   [2:0] grp_random_read_fu_152_m_axi_gmem_ARSIZE;
wire   [1:0] grp_random_read_fu_152_m_axi_gmem_ARBURST;
wire   [1:0] grp_random_read_fu_152_m_axi_gmem_ARLOCK;
wire   [3:0] grp_random_read_fu_152_m_axi_gmem_ARCACHE;
wire   [2:0] grp_random_read_fu_152_m_axi_gmem_ARPROT;
wire   [3:0] grp_random_read_fu_152_m_axi_gmem_ARQOS;
wire   [3:0] grp_random_read_fu_152_m_axi_gmem_ARREGION;
wire   [0:0] grp_random_read_fu_152_m_axi_gmem_ARUSER;
wire    grp_random_read_fu_152_m_axi_gmem_RREADY;
wire    grp_random_read_fu_152_m_axi_gmem_BREADY;
wire   [8:0] grp_random_read_fu_152_buffer_r_address1;
wire    grp_random_read_fu_152_buffer_r_ce1;
wire    grp_random_read_fu_152_buffer_r_we1;
wire   [511:0] grp_random_read_fu_152_buffer_r_d1;
wire    grp_seq_write_burst_fu_166_ap_start;
wire    grp_seq_write_burst_fu_166_ap_done;
wire    grp_seq_write_burst_fu_166_ap_idle;
wire    grp_seq_write_burst_fu_166_ap_ready;
wire    grp_seq_write_burst_fu_166_m_axi_gmem_AWVALID;
wire   [63:0] grp_seq_write_burst_fu_166_m_axi_gmem_AWADDR;
wire   [0:0] grp_seq_write_burst_fu_166_m_axi_gmem_AWID;
wire   [31:0] grp_seq_write_burst_fu_166_m_axi_gmem_AWLEN;
wire   [2:0] grp_seq_write_burst_fu_166_m_axi_gmem_AWSIZE;
wire   [1:0] grp_seq_write_burst_fu_166_m_axi_gmem_AWBURST;
wire   [1:0] grp_seq_write_burst_fu_166_m_axi_gmem_AWLOCK;
wire   [3:0] grp_seq_write_burst_fu_166_m_axi_gmem_AWCACHE;
wire   [2:0] grp_seq_write_burst_fu_166_m_axi_gmem_AWPROT;
wire   [3:0] grp_seq_write_burst_fu_166_m_axi_gmem_AWQOS;
wire   [3:0] grp_seq_write_burst_fu_166_m_axi_gmem_AWREGION;
wire   [0:0] grp_seq_write_burst_fu_166_m_axi_gmem_AWUSER;
wire    grp_seq_write_burst_fu_166_m_axi_gmem_WVALID;
wire   [511:0] grp_seq_write_burst_fu_166_m_axi_gmem_WDATA;
wire   [63:0] grp_seq_write_burst_fu_166_m_axi_gmem_WSTRB;
wire    grp_seq_write_burst_fu_166_m_axi_gmem_WLAST;
wire   [0:0] grp_seq_write_burst_fu_166_m_axi_gmem_WID;
wire   [0:0] grp_seq_write_burst_fu_166_m_axi_gmem_WUSER;
wire    grp_seq_write_burst_fu_166_m_axi_gmem_ARVALID;
wire   [63:0] grp_seq_write_burst_fu_166_m_axi_gmem_ARADDR;
wire   [0:0] grp_seq_write_burst_fu_166_m_axi_gmem_ARID;
wire   [31:0] grp_seq_write_burst_fu_166_m_axi_gmem_ARLEN;
wire   [2:0] grp_seq_write_burst_fu_166_m_axi_gmem_ARSIZE;
wire   [1:0] grp_seq_write_burst_fu_166_m_axi_gmem_ARBURST;
wire   [1:0] grp_seq_write_burst_fu_166_m_axi_gmem_ARLOCK;
wire   [3:0] grp_seq_write_burst_fu_166_m_axi_gmem_ARCACHE;
wire   [2:0] grp_seq_write_burst_fu_166_m_axi_gmem_ARPROT;
wire   [3:0] grp_seq_write_burst_fu_166_m_axi_gmem_ARQOS;
wire   [3:0] grp_seq_write_burst_fu_166_m_axi_gmem_ARREGION;
wire   [0:0] grp_seq_write_burst_fu_166_m_axi_gmem_ARUSER;
wire    grp_seq_write_burst_fu_166_m_axi_gmem_RREADY;
wire    grp_seq_write_burst_fu_166_m_axi_gmem_BREADY;
wire   [8:0] grp_seq_write_burst_fu_166_buffer_r_address0;
wire    grp_seq_write_burst_fu_166_buffer_r_ce0;
wire    grp_seq_write_fu_175_ap_start;
wire    grp_seq_write_fu_175_ap_done;
wire    grp_seq_write_fu_175_ap_idle;
wire    grp_seq_write_fu_175_ap_ready;
wire    grp_seq_write_fu_175_m_axi_gmem_AWVALID;
wire   [63:0] grp_seq_write_fu_175_m_axi_gmem_AWADDR;
wire   [0:0] grp_seq_write_fu_175_m_axi_gmem_AWID;
wire   [31:0] grp_seq_write_fu_175_m_axi_gmem_AWLEN;
wire   [2:0] grp_seq_write_fu_175_m_axi_gmem_AWSIZE;
wire   [1:0] grp_seq_write_fu_175_m_axi_gmem_AWBURST;
wire   [1:0] grp_seq_write_fu_175_m_axi_gmem_AWLOCK;
wire   [3:0] grp_seq_write_fu_175_m_axi_gmem_AWCACHE;
wire   [2:0] grp_seq_write_fu_175_m_axi_gmem_AWPROT;
wire   [3:0] grp_seq_write_fu_175_m_axi_gmem_AWQOS;
wire   [3:0] grp_seq_write_fu_175_m_axi_gmem_AWREGION;
wire   [0:0] grp_seq_write_fu_175_m_axi_gmem_AWUSER;
wire    grp_seq_write_fu_175_m_axi_gmem_WVALID;
wire   [511:0] grp_seq_write_fu_175_m_axi_gmem_WDATA;
wire   [63:0] grp_seq_write_fu_175_m_axi_gmem_WSTRB;
wire    grp_seq_write_fu_175_m_axi_gmem_WLAST;
wire   [0:0] grp_seq_write_fu_175_m_axi_gmem_WID;
wire   [0:0] grp_seq_write_fu_175_m_axi_gmem_WUSER;
wire    grp_seq_write_fu_175_m_axi_gmem_ARVALID;
wire   [63:0] grp_seq_write_fu_175_m_axi_gmem_ARADDR;
wire   [0:0] grp_seq_write_fu_175_m_axi_gmem_ARID;
wire   [31:0] grp_seq_write_fu_175_m_axi_gmem_ARLEN;
wire   [2:0] grp_seq_write_fu_175_m_axi_gmem_ARSIZE;
wire   [1:0] grp_seq_write_fu_175_m_axi_gmem_ARBURST;
wire   [1:0] grp_seq_write_fu_175_m_axi_gmem_ARLOCK;
wire   [3:0] grp_seq_write_fu_175_m_axi_gmem_ARCACHE;
wire   [2:0] grp_seq_write_fu_175_m_axi_gmem_ARPROT;
wire   [3:0] grp_seq_write_fu_175_m_axi_gmem_ARQOS;
wire   [3:0] grp_seq_write_fu_175_m_axi_gmem_ARREGION;
wire   [0:0] grp_seq_write_fu_175_m_axi_gmem_ARUSER;
wire    grp_seq_write_fu_175_m_axi_gmem_RREADY;
wire    grp_seq_write_fu_175_m_axi_gmem_BREADY;
wire   [8:0] grp_seq_write_fu_175_buffer_r_address0;
wire    grp_seq_write_fu_175_buffer_r_ce0;
wire    grp_seq_read_burst_fu_184_ap_start;
wire    grp_seq_read_burst_fu_184_ap_done;
wire    grp_seq_read_burst_fu_184_ap_idle;
wire    grp_seq_read_burst_fu_184_ap_ready;
wire    grp_seq_read_burst_fu_184_m_axi_gmem_AWVALID;
wire   [63:0] grp_seq_read_burst_fu_184_m_axi_gmem_AWADDR;
wire   [0:0] grp_seq_read_burst_fu_184_m_axi_gmem_AWID;
wire   [31:0] grp_seq_read_burst_fu_184_m_axi_gmem_AWLEN;
wire   [2:0] grp_seq_read_burst_fu_184_m_axi_gmem_AWSIZE;
wire   [1:0] grp_seq_read_burst_fu_184_m_axi_gmem_AWBURST;
wire   [1:0] grp_seq_read_burst_fu_184_m_axi_gmem_AWLOCK;
wire   [3:0] grp_seq_read_burst_fu_184_m_axi_gmem_AWCACHE;
wire   [2:0] grp_seq_read_burst_fu_184_m_axi_gmem_AWPROT;
wire   [3:0] grp_seq_read_burst_fu_184_m_axi_gmem_AWQOS;
wire   [3:0] grp_seq_read_burst_fu_184_m_axi_gmem_AWREGION;
wire   [0:0] grp_seq_read_burst_fu_184_m_axi_gmem_AWUSER;
wire    grp_seq_read_burst_fu_184_m_axi_gmem_WVALID;
wire   [511:0] grp_seq_read_burst_fu_184_m_axi_gmem_WDATA;
wire   [63:0] grp_seq_read_burst_fu_184_m_axi_gmem_WSTRB;
wire    grp_seq_read_burst_fu_184_m_axi_gmem_WLAST;
wire   [0:0] grp_seq_read_burst_fu_184_m_axi_gmem_WID;
wire   [0:0] grp_seq_read_burst_fu_184_m_axi_gmem_WUSER;
wire    grp_seq_read_burst_fu_184_m_axi_gmem_ARVALID;
wire   [63:0] grp_seq_read_burst_fu_184_m_axi_gmem_ARADDR;
wire   [0:0] grp_seq_read_burst_fu_184_m_axi_gmem_ARID;
wire   [31:0] grp_seq_read_burst_fu_184_m_axi_gmem_ARLEN;
wire   [2:0] grp_seq_read_burst_fu_184_m_axi_gmem_ARSIZE;
wire   [1:0] grp_seq_read_burst_fu_184_m_axi_gmem_ARBURST;
wire   [1:0] grp_seq_read_burst_fu_184_m_axi_gmem_ARLOCK;
wire   [3:0] grp_seq_read_burst_fu_184_m_axi_gmem_ARCACHE;
wire   [2:0] grp_seq_read_burst_fu_184_m_axi_gmem_ARPROT;
wire   [3:0] grp_seq_read_burst_fu_184_m_axi_gmem_ARQOS;
wire   [3:0] grp_seq_read_burst_fu_184_m_axi_gmem_ARREGION;
wire   [0:0] grp_seq_read_burst_fu_184_m_axi_gmem_ARUSER;
wire    grp_seq_read_burst_fu_184_m_axi_gmem_RREADY;
wire    grp_seq_read_burst_fu_184_m_axi_gmem_BREADY;
wire   [8:0] grp_seq_read_burst_fu_184_buffer_r_address1;
wire    grp_seq_read_burst_fu_184_buffer_r_ce1;
wire    grp_seq_read_burst_fu_184_buffer_r_we1;
wire   [511:0] grp_seq_read_burst_fu_184_buffer_r_d1;
wire    grp_seq_read_fu_193_ap_start;
wire    grp_seq_read_fu_193_ap_done;
wire    grp_seq_read_fu_193_ap_idle;
wire    grp_seq_read_fu_193_ap_ready;
wire    grp_seq_read_fu_193_m_axi_gmem_AWVALID;
wire   [63:0] grp_seq_read_fu_193_m_axi_gmem_AWADDR;
wire   [0:0] grp_seq_read_fu_193_m_axi_gmem_AWID;
wire   [31:0] grp_seq_read_fu_193_m_axi_gmem_AWLEN;
wire   [2:0] grp_seq_read_fu_193_m_axi_gmem_AWSIZE;
wire   [1:0] grp_seq_read_fu_193_m_axi_gmem_AWBURST;
wire   [1:0] grp_seq_read_fu_193_m_axi_gmem_AWLOCK;
wire   [3:0] grp_seq_read_fu_193_m_axi_gmem_AWCACHE;
wire   [2:0] grp_seq_read_fu_193_m_axi_gmem_AWPROT;
wire   [3:0] grp_seq_read_fu_193_m_axi_gmem_AWQOS;
wire   [3:0] grp_seq_read_fu_193_m_axi_gmem_AWREGION;
wire   [0:0] grp_seq_read_fu_193_m_axi_gmem_AWUSER;
wire    grp_seq_read_fu_193_m_axi_gmem_WVALID;
wire   [511:0] grp_seq_read_fu_193_m_axi_gmem_WDATA;
wire   [63:0] grp_seq_read_fu_193_m_axi_gmem_WSTRB;
wire    grp_seq_read_fu_193_m_axi_gmem_WLAST;
wire   [0:0] grp_seq_read_fu_193_m_axi_gmem_WID;
wire   [0:0] grp_seq_read_fu_193_m_axi_gmem_WUSER;
wire    grp_seq_read_fu_193_m_axi_gmem_ARVALID;
wire   [63:0] grp_seq_read_fu_193_m_axi_gmem_ARADDR;
wire   [0:0] grp_seq_read_fu_193_m_axi_gmem_ARID;
wire   [31:0] grp_seq_read_fu_193_m_axi_gmem_ARLEN;
wire   [2:0] grp_seq_read_fu_193_m_axi_gmem_ARSIZE;
wire   [1:0] grp_seq_read_fu_193_m_axi_gmem_ARBURST;
wire   [1:0] grp_seq_read_fu_193_m_axi_gmem_ARLOCK;
wire   [3:0] grp_seq_read_fu_193_m_axi_gmem_ARCACHE;
wire   [2:0] grp_seq_read_fu_193_m_axi_gmem_ARPROT;
wire   [3:0] grp_seq_read_fu_193_m_axi_gmem_ARQOS;
wire   [3:0] grp_seq_read_fu_193_m_axi_gmem_ARREGION;
wire   [0:0] grp_seq_read_fu_193_m_axi_gmem_ARUSER;
wire    grp_seq_read_fu_193_m_axi_gmem_RREADY;
wire    grp_seq_read_fu_193_m_axi_gmem_BREADY;
wire   [8:0] grp_seq_read_fu_193_buffer_r_address1;
wire    grp_seq_read_fu_193_buffer_r_ce1;
wire    grp_seq_read_fu_193_buffer_r_we1;
wire   [511:0] grp_seq_read_fu_193_buffer_r_d1;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [63:0] gmem_AWADDR;
reg   [31:0] gmem_AWLEN;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [511:0] gmem_WDATA;
reg   [63:0] gmem_WSTRB;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [63:0] gmem_ARADDR;
reg   [31:0] gmem_ARLEN;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [511:0] gmem_RDATA;
wire   [8:0] gmem_RFIFONUM;
wire    gmem_BVALID;
reg    gmem_BREADY;
reg    grp_random_read_write_fu_124_ap_start_reg;
reg    ap_block_state1_ignore_call0;
wire    ap_CS_fsm_state2;
reg    grp_random_write_fu_138_ap_start_reg;
reg    grp_random_read_fu_152_ap_start_reg;
reg    grp_seq_write_burst_fu_166_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_seq_write_fu_175_ap_start_reg;
reg    grp_seq_read_burst_fu_184_ap_start_reg;
reg    grp_seq_read_fu_193_ap_start_reg;
reg    ap_block_state1;
reg    ap_block_state4_on_subcall_done;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_block_state2_on_subcall_done;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 grp_random_read_write_fu_124_ap_start_reg = 1'b0;
#0 grp_random_write_fu_138_ap_start_reg = 1'b0;
#0 grp_random_read_fu_152_ap_start_reg = 1'b0;
#0 grp_seq_write_burst_fu_166_ap_start_reg = 1'b0;
#0 grp_seq_write_fu_175_ap_start_reg = 1'b0;
#0 grp_seq_read_burst_fu_184_ap_start_reg = 1'b0;
#0 grp_seq_read_fu_193_ap_start_reg = 1'b0;
end

hbm_kernel_buffer_RAM_2P_URAM_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_address0),
    .ce0(buffer_ce0),
    .q0(buffer_q0),
    .address1(buffer_address1),
    .ce1(buffer_ce1),
    .we1(buffer_we1),
    .d1(buffer_d1)
);

hbm_kernel_random_read_write grp_random_read_write_fu_124(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_random_read_write_fu_124_ap_start),
    .ap_done(grp_random_read_write_fu_124_ap_done),
    .ap_idle(grp_random_read_write_fu_124_ap_idle),
    .ap_ready(grp_random_read_write_fu_124_ap_ready),
    .m_axi_gmem_AWVALID(grp_random_read_write_fu_124_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_random_read_write_fu_124_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_random_read_write_fu_124_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_random_read_write_fu_124_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_random_read_write_fu_124_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_random_read_write_fu_124_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_random_read_write_fu_124_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_random_read_write_fu_124_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_random_read_write_fu_124_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_random_read_write_fu_124_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_random_read_write_fu_124_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_random_read_write_fu_124_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_random_read_write_fu_124_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_random_read_write_fu_124_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_random_read_write_fu_124_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_random_read_write_fu_124_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_random_read_write_fu_124_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_random_read_write_fu_124_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_random_read_write_fu_124_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_random_read_write_fu_124_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_random_read_write_fu_124_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_random_read_write_fu_124_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_random_read_write_fu_124_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_random_read_write_fu_124_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_random_read_write_fu_124_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_random_read_write_fu_124_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_random_read_write_fu_124_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_random_read_write_fu_124_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_random_read_write_fu_124_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_random_read_write_fu_124_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_random_read_write_fu_124_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_random_read_write_fu_124_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .maxi(maxi_read_reg_224),
    .buffer_r_address0(grp_random_read_write_fu_124_buffer_r_address0),
    .buffer_r_ce0(grp_random_read_write_fu_124_buffer_r_ce0),
    .buffer_r_q0(buffer_q0),
    .buffer_r_address1(grp_random_read_write_fu_124_buffer_r_address1),
    .buffer_r_ce1(grp_random_read_write_fu_124_buffer_r_ce1),
    .buffer_r_we1(grp_random_read_write_fu_124_buffer_r_we1),
    .buffer_r_d1(grp_random_read_write_fu_124_buffer_r_d1),
    .size(size),
    .range_r(range_r)
);

hbm_kernel_random_write grp_random_write_fu_138(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_random_write_fu_138_ap_start),
    .ap_done(grp_random_write_fu_138_ap_done),
    .ap_idle(grp_random_write_fu_138_ap_idle),
    .ap_ready(grp_random_write_fu_138_ap_ready),
    .m_axi_gmem_AWVALID(grp_random_write_fu_138_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_random_write_fu_138_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_random_write_fu_138_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_random_write_fu_138_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_random_write_fu_138_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_random_write_fu_138_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_random_write_fu_138_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_random_write_fu_138_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_random_write_fu_138_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_random_write_fu_138_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_random_write_fu_138_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_random_write_fu_138_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_random_write_fu_138_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_random_write_fu_138_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_random_write_fu_138_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_random_write_fu_138_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_random_write_fu_138_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_random_write_fu_138_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_random_write_fu_138_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(grp_random_write_fu_138_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_random_write_fu_138_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_random_write_fu_138_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_random_write_fu_138_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_random_write_fu_138_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_random_write_fu_138_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_random_write_fu_138_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_random_write_fu_138_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_random_write_fu_138_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_random_write_fu_138_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_random_write_fu_138_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(grp_random_write_fu_138_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(512'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(9'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_random_write_fu_138_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .maxi(maxi_read_reg_224),
    .buffer_r_address0(grp_random_write_fu_138_buffer_r_address0),
    .buffer_r_ce0(grp_random_write_fu_138_buffer_r_ce0),
    .buffer_r_q0(buffer_q0),
    .size(size),
    .range_r(range_r)
);

hbm_kernel_random_read grp_random_read_fu_152(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_random_read_fu_152_ap_start),
    .ap_done(grp_random_read_fu_152_ap_done),
    .ap_idle(grp_random_read_fu_152_ap_idle),
    .ap_ready(grp_random_read_fu_152_ap_ready),
    .m_axi_gmem_AWVALID(grp_random_read_fu_152_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_random_read_fu_152_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_random_read_fu_152_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_random_read_fu_152_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_random_read_fu_152_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_random_read_fu_152_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_random_read_fu_152_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_random_read_fu_152_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_random_read_fu_152_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_random_read_fu_152_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_random_read_fu_152_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_random_read_fu_152_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_random_read_fu_152_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_random_read_fu_152_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_random_read_fu_152_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_random_read_fu_152_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_random_read_fu_152_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_random_read_fu_152_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_random_read_fu_152_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_random_read_fu_152_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_random_read_fu_152_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_random_read_fu_152_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_random_read_fu_152_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_random_read_fu_152_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_random_read_fu_152_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_random_read_fu_152_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_random_read_fu_152_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_random_read_fu_152_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_random_read_fu_152_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_random_read_fu_152_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_random_read_fu_152_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_random_read_fu_152_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .maxi(maxi_read_reg_224),
    .buffer_r_address1(grp_random_read_fu_152_buffer_r_address1),
    .buffer_r_ce1(grp_random_read_fu_152_buffer_r_ce1),
    .buffer_r_we1(grp_random_read_fu_152_buffer_r_we1),
    .buffer_r_d1(grp_random_read_fu_152_buffer_r_d1),
    .size(size),
    .range_r(range_r)
);

hbm_kernel_seq_write_burst grp_seq_write_burst_fu_166(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_seq_write_burst_fu_166_ap_start),
    .ap_done(grp_seq_write_burst_fu_166_ap_done),
    .ap_idle(grp_seq_write_burst_fu_166_ap_idle),
    .ap_ready(grp_seq_write_burst_fu_166_ap_ready),
    .m_axi_gmem_AWVALID(grp_seq_write_burst_fu_166_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_seq_write_burst_fu_166_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_seq_write_burst_fu_166_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_seq_write_burst_fu_166_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_seq_write_burst_fu_166_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_seq_write_burst_fu_166_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_seq_write_burst_fu_166_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_seq_write_burst_fu_166_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_seq_write_burst_fu_166_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_seq_write_burst_fu_166_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_seq_write_burst_fu_166_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_seq_write_burst_fu_166_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_seq_write_burst_fu_166_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_seq_write_burst_fu_166_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_seq_write_burst_fu_166_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_seq_write_burst_fu_166_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_seq_write_burst_fu_166_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_seq_write_burst_fu_166_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_seq_write_burst_fu_166_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(grp_seq_write_burst_fu_166_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_seq_write_burst_fu_166_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_seq_write_burst_fu_166_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_seq_write_burst_fu_166_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_seq_write_burst_fu_166_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_seq_write_burst_fu_166_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_seq_write_burst_fu_166_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_seq_write_burst_fu_166_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_seq_write_burst_fu_166_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_seq_write_burst_fu_166_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_seq_write_burst_fu_166_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(grp_seq_write_burst_fu_166_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(512'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(9'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_seq_write_burst_fu_166_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .maxi(maxi_read_reg_224),
    .buffer_r_address0(grp_seq_write_burst_fu_166_buffer_r_address0),
    .buffer_r_ce0(grp_seq_write_burst_fu_166_buffer_r_ce0),
    .buffer_r_q0(buffer_q0),
    .size(size)
);

hbm_kernel_seq_write grp_seq_write_fu_175(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_seq_write_fu_175_ap_start),
    .ap_done(grp_seq_write_fu_175_ap_done),
    .ap_idle(grp_seq_write_fu_175_ap_idle),
    .ap_ready(grp_seq_write_fu_175_ap_ready),
    .m_axi_gmem_AWVALID(grp_seq_write_fu_175_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_seq_write_fu_175_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_seq_write_fu_175_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_seq_write_fu_175_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_seq_write_fu_175_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_seq_write_fu_175_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_seq_write_fu_175_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_seq_write_fu_175_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_seq_write_fu_175_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_seq_write_fu_175_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_seq_write_fu_175_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_seq_write_fu_175_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_seq_write_fu_175_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_seq_write_fu_175_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_seq_write_fu_175_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_seq_write_fu_175_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_seq_write_fu_175_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_seq_write_fu_175_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_seq_write_fu_175_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(grp_seq_write_fu_175_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_seq_write_fu_175_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_seq_write_fu_175_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_seq_write_fu_175_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_seq_write_fu_175_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_seq_write_fu_175_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_seq_write_fu_175_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_seq_write_fu_175_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_seq_write_fu_175_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_seq_write_fu_175_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_seq_write_fu_175_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(grp_seq_write_fu_175_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(512'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(9'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_seq_write_fu_175_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .maxi(maxi_read_reg_224),
    .buffer_r_address0(grp_seq_write_fu_175_buffer_r_address0),
    .buffer_r_ce0(grp_seq_write_fu_175_buffer_r_ce0),
    .buffer_r_q0(buffer_q0),
    .size(size)
);

hbm_kernel_seq_read_burst grp_seq_read_burst_fu_184(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_seq_read_burst_fu_184_ap_start),
    .ap_done(grp_seq_read_burst_fu_184_ap_done),
    .ap_idle(grp_seq_read_burst_fu_184_ap_idle),
    .ap_ready(grp_seq_read_burst_fu_184_ap_ready),
    .m_axi_gmem_AWVALID(grp_seq_read_burst_fu_184_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_seq_read_burst_fu_184_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_seq_read_burst_fu_184_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_seq_read_burst_fu_184_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_seq_read_burst_fu_184_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_seq_read_burst_fu_184_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_seq_read_burst_fu_184_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_seq_read_burst_fu_184_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_seq_read_burst_fu_184_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_seq_read_burst_fu_184_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_seq_read_burst_fu_184_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_seq_read_burst_fu_184_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_seq_read_burst_fu_184_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_seq_read_burst_fu_184_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_seq_read_burst_fu_184_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_seq_read_burst_fu_184_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_seq_read_burst_fu_184_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_seq_read_burst_fu_184_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_seq_read_burst_fu_184_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_seq_read_burst_fu_184_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_seq_read_burst_fu_184_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_seq_read_burst_fu_184_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_seq_read_burst_fu_184_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_seq_read_burst_fu_184_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_seq_read_burst_fu_184_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_seq_read_burst_fu_184_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_seq_read_burst_fu_184_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_seq_read_burst_fu_184_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_seq_read_burst_fu_184_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_seq_read_burst_fu_184_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_seq_read_burst_fu_184_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_seq_read_burst_fu_184_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .maxi(maxi_read_reg_224),
    .buffer_r_address1(grp_seq_read_burst_fu_184_buffer_r_address1),
    .buffer_r_ce1(grp_seq_read_burst_fu_184_buffer_r_ce1),
    .buffer_r_we1(grp_seq_read_burst_fu_184_buffer_r_we1),
    .buffer_r_d1(grp_seq_read_burst_fu_184_buffer_r_d1),
    .size(size)
);

hbm_kernel_seq_read grp_seq_read_fu_193(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_seq_read_fu_193_ap_start),
    .ap_done(grp_seq_read_fu_193_ap_done),
    .ap_idle(grp_seq_read_fu_193_ap_idle),
    .ap_ready(grp_seq_read_fu_193_ap_ready),
    .m_axi_gmem_AWVALID(grp_seq_read_fu_193_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_seq_read_fu_193_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_seq_read_fu_193_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_seq_read_fu_193_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_seq_read_fu_193_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_seq_read_fu_193_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_seq_read_fu_193_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_seq_read_fu_193_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_seq_read_fu_193_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_seq_read_fu_193_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_seq_read_fu_193_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_seq_read_fu_193_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_seq_read_fu_193_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_seq_read_fu_193_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_seq_read_fu_193_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_seq_read_fu_193_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_seq_read_fu_193_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_seq_read_fu_193_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_seq_read_fu_193_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_seq_read_fu_193_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_seq_read_fu_193_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_seq_read_fu_193_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_seq_read_fu_193_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_seq_read_fu_193_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_seq_read_fu_193_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_seq_read_fu_193_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_seq_read_fu_193_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_seq_read_fu_193_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_seq_read_fu_193_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_seq_read_fu_193_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_seq_read_fu_193_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_seq_read_fu_193_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .maxi(maxi_read_reg_224),
    .buffer_r_address1(grp_seq_read_fu_193_buffer_r_address1),
    .buffer_r_ce1(grp_seq_read_fu_193_buffer_r_ce1),
    .buffer_r_we1(grp_seq_read_fu_193_buffer_r_we1),
    .buffer_r_d1(grp_seq_read_fu_193_buffer_r_d1),
    .size(size)
);

hbm_kernel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .maxi(maxi),
    .size(size),
    .pattern(pattern),
    .range_r(range_r),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

hbm_kernel_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .USER_DW( 512 ),
    .USER_AW( 64 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARLEN(gmem_ARLEN),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWLEN(gmem_AWLEN),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WSTRB(gmem_WSTRB),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_random_read_fu_152_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (pattern == 32'd4) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_random_read_fu_152_ap_start_reg <= 1'b1;
        end else if ((grp_random_read_fu_152_ap_ready == 1'b1)) begin
            grp_random_read_fu_152_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_random_read_write_fu_124_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (pattern == 32'd6) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_random_read_write_fu_124_ap_start_reg <= 1'b1;
        end else if ((grp_random_read_write_fu_124_ap_ready == 1'b1)) begin
            grp_random_read_write_fu_124_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_random_write_fu_138_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (pattern == 32'd5) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_random_write_fu_138_ap_start_reg <= 1'b1;
        end else if ((grp_random_write_fu_138_ap_ready == 1'b1)) begin
            grp_random_write_fu_138_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_seq_read_burst_fu_184_ap_start_reg <= 1'b0;
    end else begin
        if (((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_seq_read_burst_fu_184_ap_start_reg <= 1'b1;
        end else if ((grp_seq_read_burst_fu_184_ap_ready == 1'b1)) begin
            grp_seq_read_burst_fu_184_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_seq_read_fu_193_ap_start_reg <= 1'b0;
    end else begin
        if (((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_seq_read_fu_193_ap_start_reg <= 1'b1;
        end else if ((grp_seq_read_fu_193_ap_ready == 1'b1)) begin
            grp_seq_read_fu_193_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_seq_write_burst_fu_166_ap_start_reg <= 1'b0;
    end else begin
        if (((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_seq_write_burst_fu_166_ap_start_reg <= 1'b1;
        end else if ((grp_seq_write_burst_fu_166_ap_ready == 1'b1)) begin
            grp_seq_write_burst_fu_166_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_seq_write_fu_175_ap_start_reg <= 1'b0;
    end else begin
        if (((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_seq_write_fu_175_ap_start_reg <= 1'b1;
        end else if ((grp_seq_write_fu_175_ap_ready == 1'b1)) begin
            grp_seq_write_fu_175_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        maxi_read_reg_224 <= maxi;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state4_on_subcall_done)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state4))) begin
        buffer_address0 = grp_seq_write_fu_175_buffer_r_address0;
    end else if (((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state4))) begin
        buffer_address0 = grp_seq_write_burst_fu_166_buffer_r_address0;
    end else if (((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_address0 = grp_random_write_fu_138_buffer_r_address0;
    end else if (((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_address0 = grp_random_read_write_fu_124_buffer_r_address0;
    end else begin
        buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        buffer_address1 = grp_seq_read_fu_193_buffer_r_address1;
    end else if (((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        buffer_address1 = grp_seq_read_burst_fu_184_buffer_r_address1;
    end else if (((pattern == 32'd4) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_address1 = grp_random_read_fu_152_buffer_r_address1;
    end else if (((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_address1 = grp_random_read_write_fu_124_buffer_r_address1;
    end else begin
        buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if (((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state4))) begin
        buffer_ce0 = grp_seq_write_fu_175_buffer_r_ce0;
    end else if (((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state4))) begin
        buffer_ce0 = grp_seq_write_burst_fu_166_buffer_r_ce0;
    end else if (((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_ce0 = grp_random_write_fu_138_buffer_r_ce0;
    end else if (((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_ce0 = grp_random_read_write_fu_124_buffer_r_ce0;
    end else begin
        buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        buffer_ce1 = grp_seq_read_fu_193_buffer_r_ce1;
    end else if (((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        buffer_ce1 = grp_seq_read_burst_fu_184_buffer_r_ce1;
    end else if (((pattern == 32'd4) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_ce1 = grp_random_read_fu_152_buffer_r_ce1;
    end else if (((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_ce1 = grp_random_read_write_fu_124_buffer_r_ce1;
    end else begin
        buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        buffer_d1 = grp_seq_read_fu_193_buffer_r_d1;
    end else if (((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        buffer_d1 = grp_seq_read_burst_fu_184_buffer_r_d1;
    end else if (((pattern == 32'd4) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_d1 = grp_random_read_fu_152_buffer_r_d1;
    end else if (((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_d1 = grp_random_read_write_fu_124_buffer_r_d1;
    end else begin
        buffer_d1 = 'bx;
    end
end

always @ (*) begin
    if (((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        buffer_we1 = grp_seq_read_fu_193_buffer_r_we1;
    end else if (((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        buffer_we1 = grp_seq_read_burst_fu_184_buffer_r_we1;
    end else if (((pattern == 32'd4) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_we1 = grp_random_read_fu_152_buffer_r_we1;
    end else if (((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_we1 = grp_random_read_write_fu_124_buffer_r_we1;
    end else begin
        buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_ARADDR = grp_seq_read_fu_193_m_axi_gmem_ARADDR;
    end else if ((((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_ARADDR = grp_seq_read_burst_fu_184_m_axi_gmem_ARADDR;
    end else if ((((pattern == 32'd4) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd4) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_ARADDR = grp_random_read_fu_152_m_axi_gmem_ARADDR;
    end else if ((((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_ARADDR = grp_random_read_write_fu_124_m_axi_gmem_ARADDR;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_ARLEN = grp_seq_read_fu_193_m_axi_gmem_ARLEN;
    end else if ((((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_ARLEN = grp_seq_read_burst_fu_184_m_axi_gmem_ARLEN;
    end else if ((((pattern == 32'd4) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd4) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_ARLEN = grp_random_read_fu_152_m_axi_gmem_ARLEN;
    end else if ((((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_ARLEN = grp_random_read_write_fu_124_m_axi_gmem_ARLEN;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_ARVALID = grp_seq_read_fu_193_m_axi_gmem_ARVALID;
    end else if ((((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_ARVALID = grp_seq_read_burst_fu_184_m_axi_gmem_ARVALID;
    end else if ((((pattern == 32'd4) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd4) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_ARVALID = grp_random_read_fu_152_m_axi_gmem_ARVALID;
    end else if ((((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_ARVALID = grp_random_read_write_fu_124_m_axi_gmem_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_AWADDR = grp_seq_write_fu_175_m_axi_gmem_AWADDR;
    end else if ((((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_AWADDR = grp_seq_write_burst_fu_166_m_axi_gmem_AWADDR;
    end else if ((((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_AWADDR = grp_random_write_fu_138_m_axi_gmem_AWADDR;
    end else if ((((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_AWADDR = grp_random_read_write_fu_124_m_axi_gmem_AWADDR;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_AWLEN = grp_seq_write_fu_175_m_axi_gmem_AWLEN;
    end else if ((((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_AWLEN = grp_seq_write_burst_fu_166_m_axi_gmem_AWLEN;
    end else if ((((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_AWLEN = grp_random_write_fu_138_m_axi_gmem_AWLEN;
    end else if ((((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_AWLEN = grp_random_read_write_fu_124_m_axi_gmem_AWLEN;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_AWVALID = grp_seq_write_fu_175_m_axi_gmem_AWVALID;
    end else if ((((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_AWVALID = grp_seq_write_burst_fu_166_m_axi_gmem_AWVALID;
    end else if ((((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_AWVALID = grp_random_write_fu_138_m_axi_gmem_AWVALID;
    end else if ((((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_AWVALID = grp_random_read_write_fu_124_m_axi_gmem_AWVALID;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_BREADY = grp_seq_write_fu_175_m_axi_gmem_BREADY;
    end else if ((((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_BREADY = grp_seq_write_burst_fu_166_m_axi_gmem_BREADY;
    end else if ((((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_BREADY = grp_random_write_fu_138_m_axi_gmem_BREADY;
    end else if ((((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_BREADY = grp_random_read_write_fu_124_m_axi_gmem_BREADY;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_RREADY = grp_seq_read_fu_193_m_axi_gmem_RREADY;
    end else if ((((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_RREADY = grp_seq_read_burst_fu_184_m_axi_gmem_RREADY;
    end else if ((((pattern == 32'd4) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd4) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_RREADY = grp_random_read_fu_152_m_axi_gmem_RREADY;
    end else if ((((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_RREADY = grp_random_read_write_fu_124_m_axi_gmem_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_WDATA = grp_seq_write_fu_175_m_axi_gmem_WDATA;
    end else if ((((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_WDATA = grp_seq_write_burst_fu_166_m_axi_gmem_WDATA;
    end else if ((((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_WDATA = grp_random_write_fu_138_m_axi_gmem_WDATA;
    end else if ((((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_WDATA = grp_random_read_write_fu_124_m_axi_gmem_WDATA;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_WSTRB = grp_seq_write_fu_175_m_axi_gmem_WSTRB;
    end else if ((((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_WSTRB = grp_seq_write_burst_fu_166_m_axi_gmem_WSTRB;
    end else if ((((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_WSTRB = grp_random_write_fu_138_m_axi_gmem_WSTRB;
    end else if ((((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_WSTRB = grp_random_read_write_fu_124_m_axi_gmem_WSTRB;
    end else begin
        gmem_WSTRB = 'bx;
    end
end

always @ (*) begin
    if ((((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd2) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_WVALID = grp_seq_write_fu_175_m_axi_gmem_WVALID;
    end else if ((((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state4)) | ((pattern == 32'd3) & (1'b1 == ap_CS_fsm_state3)))) begin
        gmem_WVALID = grp_seq_write_burst_fu_166_m_axi_gmem_WVALID;
    end else if ((((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd5) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_WVALID = grp_random_write_fu_138_m_axi_gmem_WVALID;
    end else if ((((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state2)) | ((pattern == 32'd6) & (1'b1 == ap_CS_fsm_state1)))) begin
        gmem_WVALID = grp_random_read_write_fu_124_m_axi_gmem_WVALID;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~(pattern == 32'd0) & ~(pattern == 32'd1) & ~(pattern == 32'd2) & ~(pattern == 32'd3) & ~(pattern == 32'd4) & ~(pattern == 32'd5) & ~(pattern == 32'd6) & ~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & ((pattern == 32'd0) | ((pattern == 32'd1) | ((pattern == 32'd3) | (pattern == 32'd2)))))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & ((pattern == 32'd4) | ((pattern == 32'd5) | (pattern == 32'd6))))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2) & ((pattern == 32'd4) | ((pattern == 32'd5) | (pattern == 32'd6))))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b0 == ap_block_state4_on_subcall_done) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call0 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2_on_subcall_done = (((pattern == 32'd4) & (grp_random_read_fu_152_ap_done == 1'b0)) | ((pattern == 32'd5) & (grp_random_write_fu_138_ap_done == 1'b0)) | ((pattern == 32'd6) & (grp_random_read_write_fu_124_ap_done == 1'b0)));
end

always @ (*) begin
    ap_block_state4_on_subcall_done = (((pattern == 32'd0) & (grp_seq_read_fu_193_ap_done == 1'b0)) | ((pattern == 32'd1) & (grp_seq_read_burst_fu_184_ap_done == 1'b0)) | ((pattern == 32'd2) & (grp_seq_write_fu_175_ap_done == 1'b0)) | ((pattern == 32'd3) & (grp_seq_write_burst_fu_166_ap_done == 1'b0)));
end

assign grp_random_read_fu_152_ap_start = grp_random_read_fu_152_ap_start_reg;

assign grp_random_read_write_fu_124_ap_start = grp_random_read_write_fu_124_ap_start_reg;

assign grp_random_write_fu_138_ap_start = grp_random_write_fu_138_ap_start_reg;

assign grp_seq_read_burst_fu_184_ap_start = grp_seq_read_burst_fu_184_ap_start_reg;

assign grp_seq_read_fu_193_ap_start = grp_seq_read_fu_193_ap_start_reg;

assign grp_seq_write_burst_fu_166_ap_start = grp_seq_write_burst_fu_166_ap_start_reg;

assign grp_seq_write_fu_175_ap_start = grp_seq_write_fu_175_ap_start_reg;

endmodule //hbm_kernel
