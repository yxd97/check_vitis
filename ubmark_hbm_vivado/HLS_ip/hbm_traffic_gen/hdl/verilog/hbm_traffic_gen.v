// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hbm_traffic_gen_hbm_traffic_gen,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.330000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.430900,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=18,HLS_SYN_DSP=0,HLS_SYN_FF=12023,HLS_SYN_LUT=9667,HLS_VERSION=2020_2}" *)

module hbm_traffic_gen (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        m_axi_cmd_AWVALID,
        m_axi_cmd_AWREADY,
        m_axi_cmd_AWADDR,
        m_axi_cmd_AWID,
        m_axi_cmd_AWLEN,
        m_axi_cmd_AWSIZE,
        m_axi_cmd_AWBURST,
        m_axi_cmd_AWLOCK,
        m_axi_cmd_AWCACHE,
        m_axi_cmd_AWPROT,
        m_axi_cmd_AWQOS,
        m_axi_cmd_AWREGION,
        m_axi_cmd_AWUSER,
        m_axi_cmd_WVALID,
        m_axi_cmd_WREADY,
        m_axi_cmd_WDATA,
        m_axi_cmd_WSTRB,
        m_axi_cmd_WLAST,
        m_axi_cmd_WID,
        m_axi_cmd_WUSER,
        m_axi_cmd_ARVALID,
        m_axi_cmd_ARREADY,
        m_axi_cmd_ARADDR,
        m_axi_cmd_ARID,
        m_axi_cmd_ARLEN,
        m_axi_cmd_ARSIZE,
        m_axi_cmd_ARBURST,
        m_axi_cmd_ARLOCK,
        m_axi_cmd_ARCACHE,
        m_axi_cmd_ARPROT,
        m_axi_cmd_ARQOS,
        m_axi_cmd_ARREGION,
        m_axi_cmd_ARUSER,
        m_axi_cmd_RVALID,
        m_axi_cmd_RREADY,
        m_axi_cmd_RDATA,
        m_axi_cmd_RLAST,
        m_axi_cmd_RID,
        m_axi_cmd_RUSER,
        m_axi_cmd_RRESP,
        m_axi_cmd_BVALID,
        m_axi_cmd_BREADY,
        m_axi_cmd_BRESP,
        m_axi_cmd_BID,
        m_axi_cmd_BUSER
);

parameter    ap_ST_fsm_state1 = 59'd1;
parameter    ap_ST_fsm_state2 = 59'd2;
parameter    ap_ST_fsm_state3 = 59'd4;
parameter    ap_ST_fsm_state4 = 59'd8;
parameter    ap_ST_fsm_state5 = 59'd16;
parameter    ap_ST_fsm_state6 = 59'd32;
parameter    ap_ST_fsm_state7 = 59'd64;
parameter    ap_ST_fsm_state8 = 59'd128;
parameter    ap_ST_fsm_state9 = 59'd256;
parameter    ap_ST_fsm_state10 = 59'd512;
parameter    ap_ST_fsm_state11 = 59'd1024;
parameter    ap_ST_fsm_state12 = 59'd2048;
parameter    ap_ST_fsm_state13 = 59'd4096;
parameter    ap_ST_fsm_state14 = 59'd8192;
parameter    ap_ST_fsm_state15 = 59'd16384;
parameter    ap_ST_fsm_state16 = 59'd32768;
parameter    ap_ST_fsm_state17 = 59'd65536;
parameter    ap_ST_fsm_state18 = 59'd131072;
parameter    ap_ST_fsm_state19 = 59'd262144;
parameter    ap_ST_fsm_state20 = 59'd524288;
parameter    ap_ST_fsm_state21 = 59'd1048576;
parameter    ap_ST_fsm_state22 = 59'd2097152;
parameter    ap_ST_fsm_state23 = 59'd4194304;
parameter    ap_ST_fsm_state24 = 59'd8388608;
parameter    ap_ST_fsm_state25 = 59'd16777216;
parameter    ap_ST_fsm_state26 = 59'd33554432;
parameter    ap_ST_fsm_state27 = 59'd67108864;
parameter    ap_ST_fsm_state28 = 59'd134217728;
parameter    ap_ST_fsm_state29 = 59'd268435456;
parameter    ap_ST_fsm_state30 = 59'd536870912;
parameter    ap_ST_fsm_state31 = 59'd1073741824;
parameter    ap_ST_fsm_state32 = 59'd2147483648;
parameter    ap_ST_fsm_state33 = 59'd4294967296;
parameter    ap_ST_fsm_state34 = 59'd8589934592;
parameter    ap_ST_fsm_state35 = 59'd17179869184;
parameter    ap_ST_fsm_state36 = 59'd34359738368;
parameter    ap_ST_fsm_state37 = 59'd68719476736;
parameter    ap_ST_fsm_state38 = 59'd137438953472;
parameter    ap_ST_fsm_state39 = 59'd274877906944;
parameter    ap_ST_fsm_state40 = 59'd549755813888;
parameter    ap_ST_fsm_state41 = 59'd1099511627776;
parameter    ap_ST_fsm_state42 = 59'd2199023255552;
parameter    ap_ST_fsm_state43 = 59'd4398046511104;
parameter    ap_ST_fsm_state44 = 59'd8796093022208;
parameter    ap_ST_fsm_state45 = 59'd17592186044416;
parameter    ap_ST_fsm_state46 = 59'd35184372088832;
parameter    ap_ST_fsm_state47 = 59'd70368744177664;
parameter    ap_ST_fsm_state48 = 59'd140737488355328;
parameter    ap_ST_fsm_state49 = 59'd281474976710656;
parameter    ap_ST_fsm_state50 = 59'd562949953421312;
parameter    ap_ST_fsm_state51 = 59'd1125899906842624;
parameter    ap_ST_fsm_state52 = 59'd2251799813685248;
parameter    ap_ST_fsm_state53 = 59'd4503599627370496;
parameter    ap_ST_fsm_state54 = 59'd9007199254740992;
parameter    ap_ST_fsm_state55 = 59'd18014398509481984;
parameter    ap_ST_fsm_state56 = 59'd36028797018963968;
parameter    ap_ST_fsm_state57 = 59'd72057594037927936;
parameter    ap_ST_fsm_state58 = 59'd144115188075855872;
parameter    ap_ST_fsm_state59 = 59'd288230376151711744;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 256;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_TARGET_ADDR = 0;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_CMD_ID_WIDTH = 1;
parameter    C_M_AXI_CMD_ADDR_WIDTH = 64;
parameter    C_M_AXI_CMD_DATA_WIDTH = 32;
parameter    C_M_AXI_CMD_AWUSER_WIDTH = 1;
parameter    C_M_AXI_CMD_ARUSER_WIDTH = 1;
parameter    C_M_AXI_CMD_WUSER_WIDTH = 1;
parameter    C_M_AXI_CMD_RUSER_WIDTH = 1;
parameter    C_M_AXI_CMD_BUSER_WIDTH = 1;
parameter    C_M_AXI_CMD_TARGET_ADDR = 0;
parameter    C_M_AXI_CMD_USER_VALUE = 0;
parameter    C_M_AXI_CMD_PROT_VALUE = 0;
parameter    C_M_AXI_CMD_CACHE_VALUE = 3;

parameter C_M_AXI_GMEM_WSTRB_WIDTH = (256 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_CMD_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output   m_axi_cmd_AWVALID;
input   m_axi_cmd_AWREADY;
output  [C_M_AXI_CMD_ADDR_WIDTH - 1:0] m_axi_cmd_AWADDR;
output  [C_M_AXI_CMD_ID_WIDTH - 1:0] m_axi_cmd_AWID;
output  [7:0] m_axi_cmd_AWLEN;
output  [2:0] m_axi_cmd_AWSIZE;
output  [1:0] m_axi_cmd_AWBURST;
output  [1:0] m_axi_cmd_AWLOCK;
output  [3:0] m_axi_cmd_AWCACHE;
output  [2:0] m_axi_cmd_AWPROT;
output  [3:0] m_axi_cmd_AWQOS;
output  [3:0] m_axi_cmd_AWREGION;
output  [C_M_AXI_CMD_AWUSER_WIDTH - 1:0] m_axi_cmd_AWUSER;
output   m_axi_cmd_WVALID;
input   m_axi_cmd_WREADY;
output  [C_M_AXI_CMD_DATA_WIDTH - 1:0] m_axi_cmd_WDATA;
output  [C_M_AXI_CMD_WSTRB_WIDTH - 1:0] m_axi_cmd_WSTRB;
output   m_axi_cmd_WLAST;
output  [C_M_AXI_CMD_ID_WIDTH - 1:0] m_axi_cmd_WID;
output  [C_M_AXI_CMD_WUSER_WIDTH - 1:0] m_axi_cmd_WUSER;
output   m_axi_cmd_ARVALID;
input   m_axi_cmd_ARREADY;
output  [C_M_AXI_CMD_ADDR_WIDTH - 1:0] m_axi_cmd_ARADDR;
output  [C_M_AXI_CMD_ID_WIDTH - 1:0] m_axi_cmd_ARID;
output  [7:0] m_axi_cmd_ARLEN;
output  [2:0] m_axi_cmd_ARSIZE;
output  [1:0] m_axi_cmd_ARBURST;
output  [1:0] m_axi_cmd_ARLOCK;
output  [3:0] m_axi_cmd_ARCACHE;
output  [2:0] m_axi_cmd_ARPROT;
output  [3:0] m_axi_cmd_ARQOS;
output  [3:0] m_axi_cmd_ARREGION;
output  [C_M_AXI_CMD_ARUSER_WIDTH - 1:0] m_axi_cmd_ARUSER;
input   m_axi_cmd_RVALID;
output   m_axi_cmd_RREADY;
input  [C_M_AXI_CMD_DATA_WIDTH - 1:0] m_axi_cmd_RDATA;
input   m_axi_cmd_RLAST;
input  [C_M_AXI_CMD_ID_WIDTH - 1:0] m_axi_cmd_RID;
input  [C_M_AXI_CMD_RUSER_WIDTH - 1:0] m_axi_cmd_RUSER;
input  [1:0] m_axi_cmd_RRESP;
input   m_axi_cmd_BVALID;
output   m_axi_cmd_BREADY;
input  [1:0] m_axi_cmd_BRESP;
input  [C_M_AXI_CMD_ID_WIDTH - 1:0] m_axi_cmd_BID;
input  [C_M_AXI_CMD_BUSER_WIDTH - 1:0] m_axi_cmd_BUSER;

 reg    ap_rst_n_inv;
reg    cmd_blk_n_AW;
(* fsm_encoding = "none" *) reg   [58:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    cmd_blk_n_W;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    cmd_blk_n_B;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state32;
reg    cmd_blk_n_AR;
reg    cmd_blk_n_R;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state16;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg   [63:0] gmem_AWADDR;
reg   [0:0] gmem_AWID;
reg   [31:0] gmem_AWLEN;
reg   [2:0] gmem_AWSIZE;
reg   [1:0] gmem_AWBURST;
reg   [1:0] gmem_AWLOCK;
reg   [3:0] gmem_AWCACHE;
reg   [2:0] gmem_AWPROT;
reg   [3:0] gmem_AWQOS;
reg   [3:0] gmem_AWREGION;
reg   [0:0] gmem_AWUSER;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg   [255:0] gmem_WDATA;
reg   [31:0] gmem_WSTRB;
reg    gmem_WLAST;
reg   [0:0] gmem_WID;
reg   [0:0] gmem_WUSER;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [63:0] gmem_ARADDR;
reg   [0:0] gmem_ARID;
reg   [31:0] gmem_ARLEN;
reg   [2:0] gmem_ARSIZE;
reg   [1:0] gmem_ARBURST;
reg   [1:0] gmem_ARLOCK;
reg   [3:0] gmem_ARCACHE;
reg   [2:0] gmem_ARPROT;
reg   [3:0] gmem_ARQOS;
reg   [3:0] gmem_ARREGION;
reg   [0:0] gmem_ARUSER;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [255:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg    cmd_AWVALID;
wire    cmd_AWREADY;
reg   [63:0] cmd_AWADDR;
reg   [31:0] cmd_AWLEN;
reg    cmd_WVALID;
wire    cmd_WREADY;
reg    cmd_ARVALID;
wire    cmd_ARREADY;
reg   [63:0] cmd_ARADDR;
reg   [31:0] cmd_ARLEN;
wire    cmd_RVALID;
reg    cmd_RREADY;
wire   [31:0] cmd_RDATA;
wire    cmd_RLAST;
wire   [0:0] cmd_RID;
wire   [0:0] cmd_RUSER;
wire   [1:0] cmd_RRESP;
wire    cmd_BVALID;
reg    cmd_BREADY;
wire   [1:0] cmd_BRESP;
wire   [0:0] cmd_BID;
wire   [0:0] cmd_BUSER;
wire   [63:0] cmd_addr_reg_307;
reg   [31:0] cmd_read_reg_337;
reg   [31:0] pattern_reg_345;
reg   [31:0] size_reg_349;
reg   [31:0] range_reg_360;
reg   [31:0] cmd_addr_3_read_reg_367;
reg   [31:0] cmd_addr_4_read_reg_375;
reg   [9:0] buffer_address0;
reg    buffer_ce0;
wire   [255:0] buffer_q0;
reg   [9:0] buffer_address1;
reg    buffer_ce1;
reg    buffer_we1;
reg   [255:0] buffer_d1;
wire    grp_random_read_write_fu_202_ap_start;
wire    grp_random_read_write_fu_202_ap_done;
wire    grp_random_read_write_fu_202_ap_idle;
wire    grp_random_read_write_fu_202_ap_ready;
wire    grp_random_read_write_fu_202_m_axi_gmem_AWVALID;
wire   [63:0] grp_random_read_write_fu_202_m_axi_gmem_AWADDR;
wire   [0:0] grp_random_read_write_fu_202_m_axi_gmem_AWID;
wire   [31:0] grp_random_read_write_fu_202_m_axi_gmem_AWLEN;
wire   [2:0] grp_random_read_write_fu_202_m_axi_gmem_AWSIZE;
wire   [1:0] grp_random_read_write_fu_202_m_axi_gmem_AWBURST;
wire   [1:0] grp_random_read_write_fu_202_m_axi_gmem_AWLOCK;
wire   [3:0] grp_random_read_write_fu_202_m_axi_gmem_AWCACHE;
wire   [2:0] grp_random_read_write_fu_202_m_axi_gmem_AWPROT;
wire   [3:0] grp_random_read_write_fu_202_m_axi_gmem_AWQOS;
wire   [3:0] grp_random_read_write_fu_202_m_axi_gmem_AWREGION;
wire   [0:0] grp_random_read_write_fu_202_m_axi_gmem_AWUSER;
wire    grp_random_read_write_fu_202_m_axi_gmem_WVALID;
wire   [255:0] grp_random_read_write_fu_202_m_axi_gmem_WDATA;
wire   [31:0] grp_random_read_write_fu_202_m_axi_gmem_WSTRB;
wire    grp_random_read_write_fu_202_m_axi_gmem_WLAST;
wire   [0:0] grp_random_read_write_fu_202_m_axi_gmem_WID;
wire   [0:0] grp_random_read_write_fu_202_m_axi_gmem_WUSER;
wire    grp_random_read_write_fu_202_m_axi_gmem_ARVALID;
wire   [63:0] grp_random_read_write_fu_202_m_axi_gmem_ARADDR;
wire   [0:0] grp_random_read_write_fu_202_m_axi_gmem_ARID;
wire   [31:0] grp_random_read_write_fu_202_m_axi_gmem_ARLEN;
wire   [2:0] grp_random_read_write_fu_202_m_axi_gmem_ARSIZE;
wire   [1:0] grp_random_read_write_fu_202_m_axi_gmem_ARBURST;
wire   [1:0] grp_random_read_write_fu_202_m_axi_gmem_ARLOCK;
wire   [3:0] grp_random_read_write_fu_202_m_axi_gmem_ARCACHE;
wire   [2:0] grp_random_read_write_fu_202_m_axi_gmem_ARPROT;
wire   [3:0] grp_random_read_write_fu_202_m_axi_gmem_ARQOS;
wire   [3:0] grp_random_read_write_fu_202_m_axi_gmem_ARREGION;
wire   [0:0] grp_random_read_write_fu_202_m_axi_gmem_ARUSER;
wire    grp_random_read_write_fu_202_m_axi_gmem_RREADY;
wire    grp_random_read_write_fu_202_m_axi_gmem_BREADY;
wire   [9:0] grp_random_read_write_fu_202_buffer_r_address0;
wire    grp_random_read_write_fu_202_buffer_r_ce0;
wire   [9:0] grp_random_read_write_fu_202_buffer_r_address1;
wire    grp_random_read_write_fu_202_buffer_r_ce1;
wire    grp_random_read_write_fu_202_buffer_r_we1;
wire   [255:0] grp_random_read_write_fu_202_buffer_r_d1;
wire    grp_random_write_fu_211_ap_start;
wire    grp_random_write_fu_211_ap_done;
wire    grp_random_write_fu_211_ap_idle;
wire    grp_random_write_fu_211_ap_ready;
wire    grp_random_write_fu_211_m_axi_gmem_AWVALID;
wire   [63:0] grp_random_write_fu_211_m_axi_gmem_AWADDR;
wire   [0:0] grp_random_write_fu_211_m_axi_gmem_AWID;
wire   [31:0] grp_random_write_fu_211_m_axi_gmem_AWLEN;
wire   [2:0] grp_random_write_fu_211_m_axi_gmem_AWSIZE;
wire   [1:0] grp_random_write_fu_211_m_axi_gmem_AWBURST;
wire   [1:0] grp_random_write_fu_211_m_axi_gmem_AWLOCK;
wire   [3:0] grp_random_write_fu_211_m_axi_gmem_AWCACHE;
wire   [2:0] grp_random_write_fu_211_m_axi_gmem_AWPROT;
wire   [3:0] grp_random_write_fu_211_m_axi_gmem_AWQOS;
wire   [3:0] grp_random_write_fu_211_m_axi_gmem_AWREGION;
wire   [0:0] grp_random_write_fu_211_m_axi_gmem_AWUSER;
wire    grp_random_write_fu_211_m_axi_gmem_WVALID;
wire   [255:0] grp_random_write_fu_211_m_axi_gmem_WDATA;
wire   [31:0] grp_random_write_fu_211_m_axi_gmem_WSTRB;
wire    grp_random_write_fu_211_m_axi_gmem_WLAST;
wire   [0:0] grp_random_write_fu_211_m_axi_gmem_WID;
wire   [0:0] grp_random_write_fu_211_m_axi_gmem_WUSER;
wire    grp_random_write_fu_211_m_axi_gmem_ARVALID;
wire   [63:0] grp_random_write_fu_211_m_axi_gmem_ARADDR;
wire   [0:0] grp_random_write_fu_211_m_axi_gmem_ARID;
wire   [31:0] grp_random_write_fu_211_m_axi_gmem_ARLEN;
wire   [2:0] grp_random_write_fu_211_m_axi_gmem_ARSIZE;
wire   [1:0] grp_random_write_fu_211_m_axi_gmem_ARBURST;
wire   [1:0] grp_random_write_fu_211_m_axi_gmem_ARLOCK;
wire   [3:0] grp_random_write_fu_211_m_axi_gmem_ARCACHE;
wire   [2:0] grp_random_write_fu_211_m_axi_gmem_ARPROT;
wire   [3:0] grp_random_write_fu_211_m_axi_gmem_ARQOS;
wire   [3:0] grp_random_write_fu_211_m_axi_gmem_ARREGION;
wire   [0:0] grp_random_write_fu_211_m_axi_gmem_ARUSER;
wire    grp_random_write_fu_211_m_axi_gmem_RREADY;
wire    grp_random_write_fu_211_m_axi_gmem_BREADY;
wire   [9:0] grp_random_write_fu_211_buffer_r_address0;
wire    grp_random_write_fu_211_buffer_r_ce0;
wire    grp_random_read_fu_220_ap_start;
wire    grp_random_read_fu_220_ap_done;
wire    grp_random_read_fu_220_ap_idle;
wire    grp_random_read_fu_220_ap_ready;
wire    grp_random_read_fu_220_m_axi_gmem_AWVALID;
wire   [63:0] grp_random_read_fu_220_m_axi_gmem_AWADDR;
wire   [0:0] grp_random_read_fu_220_m_axi_gmem_AWID;
wire   [31:0] grp_random_read_fu_220_m_axi_gmem_AWLEN;
wire   [2:0] grp_random_read_fu_220_m_axi_gmem_AWSIZE;
wire   [1:0] grp_random_read_fu_220_m_axi_gmem_AWBURST;
wire   [1:0] grp_random_read_fu_220_m_axi_gmem_AWLOCK;
wire   [3:0] grp_random_read_fu_220_m_axi_gmem_AWCACHE;
wire   [2:0] grp_random_read_fu_220_m_axi_gmem_AWPROT;
wire   [3:0] grp_random_read_fu_220_m_axi_gmem_AWQOS;
wire   [3:0] grp_random_read_fu_220_m_axi_gmem_AWREGION;
wire   [0:0] grp_random_read_fu_220_m_axi_gmem_AWUSER;
wire    grp_random_read_fu_220_m_axi_gmem_WVALID;
wire   [255:0] grp_random_read_fu_220_m_axi_gmem_WDATA;
wire   [31:0] grp_random_read_fu_220_m_axi_gmem_WSTRB;
wire    grp_random_read_fu_220_m_axi_gmem_WLAST;
wire   [0:0] grp_random_read_fu_220_m_axi_gmem_WID;
wire   [0:0] grp_random_read_fu_220_m_axi_gmem_WUSER;
wire    grp_random_read_fu_220_m_axi_gmem_ARVALID;
wire   [63:0] grp_random_read_fu_220_m_axi_gmem_ARADDR;
wire   [0:0] grp_random_read_fu_220_m_axi_gmem_ARID;
wire   [31:0] grp_random_read_fu_220_m_axi_gmem_ARLEN;
wire   [2:0] grp_random_read_fu_220_m_axi_gmem_ARSIZE;
wire   [1:0] grp_random_read_fu_220_m_axi_gmem_ARBURST;
wire   [1:0] grp_random_read_fu_220_m_axi_gmem_ARLOCK;
wire   [3:0] grp_random_read_fu_220_m_axi_gmem_ARCACHE;
wire   [2:0] grp_random_read_fu_220_m_axi_gmem_ARPROT;
wire   [3:0] grp_random_read_fu_220_m_axi_gmem_ARQOS;
wire   [3:0] grp_random_read_fu_220_m_axi_gmem_ARREGION;
wire   [0:0] grp_random_read_fu_220_m_axi_gmem_ARUSER;
wire    grp_random_read_fu_220_m_axi_gmem_RREADY;
wire    grp_random_read_fu_220_m_axi_gmem_BREADY;
wire   [9:0] grp_random_read_fu_220_buffer_r_address1;
wire    grp_random_read_fu_220_buffer_r_ce1;
wire    grp_random_read_fu_220_buffer_r_we1;
wire   [255:0] grp_random_read_fu_220_buffer_r_d1;
wire    grp_seq_write_burst_fu_229_ap_start;
wire    grp_seq_write_burst_fu_229_ap_done;
wire    grp_seq_write_burst_fu_229_ap_idle;
wire    grp_seq_write_burst_fu_229_ap_ready;
wire    grp_seq_write_burst_fu_229_m_axi_gmem_AWVALID;
wire   [63:0] grp_seq_write_burst_fu_229_m_axi_gmem_AWADDR;
wire   [0:0] grp_seq_write_burst_fu_229_m_axi_gmem_AWID;
wire   [31:0] grp_seq_write_burst_fu_229_m_axi_gmem_AWLEN;
wire   [2:0] grp_seq_write_burst_fu_229_m_axi_gmem_AWSIZE;
wire   [1:0] grp_seq_write_burst_fu_229_m_axi_gmem_AWBURST;
wire   [1:0] grp_seq_write_burst_fu_229_m_axi_gmem_AWLOCK;
wire   [3:0] grp_seq_write_burst_fu_229_m_axi_gmem_AWCACHE;
wire   [2:0] grp_seq_write_burst_fu_229_m_axi_gmem_AWPROT;
wire   [3:0] grp_seq_write_burst_fu_229_m_axi_gmem_AWQOS;
wire   [3:0] grp_seq_write_burst_fu_229_m_axi_gmem_AWREGION;
wire   [0:0] grp_seq_write_burst_fu_229_m_axi_gmem_AWUSER;
wire    grp_seq_write_burst_fu_229_m_axi_gmem_WVALID;
wire   [255:0] grp_seq_write_burst_fu_229_m_axi_gmem_WDATA;
wire   [31:0] grp_seq_write_burst_fu_229_m_axi_gmem_WSTRB;
wire    grp_seq_write_burst_fu_229_m_axi_gmem_WLAST;
wire   [0:0] grp_seq_write_burst_fu_229_m_axi_gmem_WID;
wire   [0:0] grp_seq_write_burst_fu_229_m_axi_gmem_WUSER;
wire    grp_seq_write_burst_fu_229_m_axi_gmem_ARVALID;
wire   [63:0] grp_seq_write_burst_fu_229_m_axi_gmem_ARADDR;
wire   [0:0] grp_seq_write_burst_fu_229_m_axi_gmem_ARID;
wire   [31:0] grp_seq_write_burst_fu_229_m_axi_gmem_ARLEN;
wire   [2:0] grp_seq_write_burst_fu_229_m_axi_gmem_ARSIZE;
wire   [1:0] grp_seq_write_burst_fu_229_m_axi_gmem_ARBURST;
wire   [1:0] grp_seq_write_burst_fu_229_m_axi_gmem_ARLOCK;
wire   [3:0] grp_seq_write_burst_fu_229_m_axi_gmem_ARCACHE;
wire   [2:0] grp_seq_write_burst_fu_229_m_axi_gmem_ARPROT;
wire   [3:0] grp_seq_write_burst_fu_229_m_axi_gmem_ARQOS;
wire   [3:0] grp_seq_write_burst_fu_229_m_axi_gmem_ARREGION;
wire   [0:0] grp_seq_write_burst_fu_229_m_axi_gmem_ARUSER;
wire    grp_seq_write_burst_fu_229_m_axi_gmem_RREADY;
wire    grp_seq_write_burst_fu_229_m_axi_gmem_BREADY;
wire   [9:0] grp_seq_write_burst_fu_229_buffer_r_address0;
wire    grp_seq_write_burst_fu_229_buffer_r_ce0;
wire    grp_seq_write_fu_237_ap_start;
wire    grp_seq_write_fu_237_ap_done;
wire    grp_seq_write_fu_237_ap_idle;
wire    grp_seq_write_fu_237_ap_ready;
wire    grp_seq_write_fu_237_m_axi_gmem_AWVALID;
wire   [63:0] grp_seq_write_fu_237_m_axi_gmem_AWADDR;
wire   [0:0] grp_seq_write_fu_237_m_axi_gmem_AWID;
wire   [31:0] grp_seq_write_fu_237_m_axi_gmem_AWLEN;
wire   [2:0] grp_seq_write_fu_237_m_axi_gmem_AWSIZE;
wire   [1:0] grp_seq_write_fu_237_m_axi_gmem_AWBURST;
wire   [1:0] grp_seq_write_fu_237_m_axi_gmem_AWLOCK;
wire   [3:0] grp_seq_write_fu_237_m_axi_gmem_AWCACHE;
wire   [2:0] grp_seq_write_fu_237_m_axi_gmem_AWPROT;
wire   [3:0] grp_seq_write_fu_237_m_axi_gmem_AWQOS;
wire   [3:0] grp_seq_write_fu_237_m_axi_gmem_AWREGION;
wire   [0:0] grp_seq_write_fu_237_m_axi_gmem_AWUSER;
wire    grp_seq_write_fu_237_m_axi_gmem_WVALID;
wire   [255:0] grp_seq_write_fu_237_m_axi_gmem_WDATA;
wire   [31:0] grp_seq_write_fu_237_m_axi_gmem_WSTRB;
wire    grp_seq_write_fu_237_m_axi_gmem_WLAST;
wire   [0:0] grp_seq_write_fu_237_m_axi_gmem_WID;
wire   [0:0] grp_seq_write_fu_237_m_axi_gmem_WUSER;
wire    grp_seq_write_fu_237_m_axi_gmem_ARVALID;
wire   [63:0] grp_seq_write_fu_237_m_axi_gmem_ARADDR;
wire   [0:0] grp_seq_write_fu_237_m_axi_gmem_ARID;
wire   [31:0] grp_seq_write_fu_237_m_axi_gmem_ARLEN;
wire   [2:0] grp_seq_write_fu_237_m_axi_gmem_ARSIZE;
wire   [1:0] grp_seq_write_fu_237_m_axi_gmem_ARBURST;
wire   [1:0] grp_seq_write_fu_237_m_axi_gmem_ARLOCK;
wire   [3:0] grp_seq_write_fu_237_m_axi_gmem_ARCACHE;
wire   [2:0] grp_seq_write_fu_237_m_axi_gmem_ARPROT;
wire   [3:0] grp_seq_write_fu_237_m_axi_gmem_ARQOS;
wire   [3:0] grp_seq_write_fu_237_m_axi_gmem_ARREGION;
wire   [0:0] grp_seq_write_fu_237_m_axi_gmem_ARUSER;
wire    grp_seq_write_fu_237_m_axi_gmem_RREADY;
wire    grp_seq_write_fu_237_m_axi_gmem_BREADY;
wire   [9:0] grp_seq_write_fu_237_buffer_r_address0;
wire    grp_seq_write_fu_237_buffer_r_ce0;
wire    grp_seq_read_burst_fu_245_ap_start;
wire    grp_seq_read_burst_fu_245_ap_done;
wire    grp_seq_read_burst_fu_245_ap_idle;
wire    grp_seq_read_burst_fu_245_ap_ready;
wire    grp_seq_read_burst_fu_245_m_axi_gmem_AWVALID;
wire   [63:0] grp_seq_read_burst_fu_245_m_axi_gmem_AWADDR;
wire   [0:0] grp_seq_read_burst_fu_245_m_axi_gmem_AWID;
wire   [31:0] grp_seq_read_burst_fu_245_m_axi_gmem_AWLEN;
wire   [2:0] grp_seq_read_burst_fu_245_m_axi_gmem_AWSIZE;
wire   [1:0] grp_seq_read_burst_fu_245_m_axi_gmem_AWBURST;
wire   [1:0] grp_seq_read_burst_fu_245_m_axi_gmem_AWLOCK;
wire   [3:0] grp_seq_read_burst_fu_245_m_axi_gmem_AWCACHE;
wire   [2:0] grp_seq_read_burst_fu_245_m_axi_gmem_AWPROT;
wire   [3:0] grp_seq_read_burst_fu_245_m_axi_gmem_AWQOS;
wire   [3:0] grp_seq_read_burst_fu_245_m_axi_gmem_AWREGION;
wire   [0:0] grp_seq_read_burst_fu_245_m_axi_gmem_AWUSER;
wire    grp_seq_read_burst_fu_245_m_axi_gmem_WVALID;
wire   [255:0] grp_seq_read_burst_fu_245_m_axi_gmem_WDATA;
wire   [31:0] grp_seq_read_burst_fu_245_m_axi_gmem_WSTRB;
wire    grp_seq_read_burst_fu_245_m_axi_gmem_WLAST;
wire   [0:0] grp_seq_read_burst_fu_245_m_axi_gmem_WID;
wire   [0:0] grp_seq_read_burst_fu_245_m_axi_gmem_WUSER;
wire    grp_seq_read_burst_fu_245_m_axi_gmem_ARVALID;
wire   [63:0] grp_seq_read_burst_fu_245_m_axi_gmem_ARADDR;
wire   [0:0] grp_seq_read_burst_fu_245_m_axi_gmem_ARID;
wire   [31:0] grp_seq_read_burst_fu_245_m_axi_gmem_ARLEN;
wire   [2:0] grp_seq_read_burst_fu_245_m_axi_gmem_ARSIZE;
wire   [1:0] grp_seq_read_burst_fu_245_m_axi_gmem_ARBURST;
wire   [1:0] grp_seq_read_burst_fu_245_m_axi_gmem_ARLOCK;
wire   [3:0] grp_seq_read_burst_fu_245_m_axi_gmem_ARCACHE;
wire   [2:0] grp_seq_read_burst_fu_245_m_axi_gmem_ARPROT;
wire   [3:0] grp_seq_read_burst_fu_245_m_axi_gmem_ARQOS;
wire   [3:0] grp_seq_read_burst_fu_245_m_axi_gmem_ARREGION;
wire   [0:0] grp_seq_read_burst_fu_245_m_axi_gmem_ARUSER;
wire    grp_seq_read_burst_fu_245_m_axi_gmem_RREADY;
wire    grp_seq_read_burst_fu_245_m_axi_gmem_BREADY;
wire   [9:0] grp_seq_read_burst_fu_245_buffer_r_address1;
wire    grp_seq_read_burst_fu_245_buffer_r_ce1;
wire    grp_seq_read_burst_fu_245_buffer_r_we1;
wire   [255:0] grp_seq_read_burst_fu_245_buffer_r_d1;
wire    grp_seq_read_fu_253_ap_start;
wire    grp_seq_read_fu_253_ap_done;
wire    grp_seq_read_fu_253_ap_idle;
wire    grp_seq_read_fu_253_ap_ready;
wire    grp_seq_read_fu_253_m_axi_gmem_AWVALID;
wire   [63:0] grp_seq_read_fu_253_m_axi_gmem_AWADDR;
wire   [0:0] grp_seq_read_fu_253_m_axi_gmem_AWID;
wire   [31:0] grp_seq_read_fu_253_m_axi_gmem_AWLEN;
wire   [2:0] grp_seq_read_fu_253_m_axi_gmem_AWSIZE;
wire   [1:0] grp_seq_read_fu_253_m_axi_gmem_AWBURST;
wire   [1:0] grp_seq_read_fu_253_m_axi_gmem_AWLOCK;
wire   [3:0] grp_seq_read_fu_253_m_axi_gmem_AWCACHE;
wire   [2:0] grp_seq_read_fu_253_m_axi_gmem_AWPROT;
wire   [3:0] grp_seq_read_fu_253_m_axi_gmem_AWQOS;
wire   [3:0] grp_seq_read_fu_253_m_axi_gmem_AWREGION;
wire   [0:0] grp_seq_read_fu_253_m_axi_gmem_AWUSER;
wire    grp_seq_read_fu_253_m_axi_gmem_WVALID;
wire   [255:0] grp_seq_read_fu_253_m_axi_gmem_WDATA;
wire   [31:0] grp_seq_read_fu_253_m_axi_gmem_WSTRB;
wire    grp_seq_read_fu_253_m_axi_gmem_WLAST;
wire   [0:0] grp_seq_read_fu_253_m_axi_gmem_WID;
wire   [0:0] grp_seq_read_fu_253_m_axi_gmem_WUSER;
wire    grp_seq_read_fu_253_m_axi_gmem_ARVALID;
wire   [63:0] grp_seq_read_fu_253_m_axi_gmem_ARADDR;
wire   [0:0] grp_seq_read_fu_253_m_axi_gmem_ARID;
wire   [31:0] grp_seq_read_fu_253_m_axi_gmem_ARLEN;
wire   [2:0] grp_seq_read_fu_253_m_axi_gmem_ARSIZE;
wire   [1:0] grp_seq_read_fu_253_m_axi_gmem_ARBURST;
wire   [1:0] grp_seq_read_fu_253_m_axi_gmem_ARLOCK;
wire   [3:0] grp_seq_read_fu_253_m_axi_gmem_ARCACHE;
wire   [2:0] grp_seq_read_fu_253_m_axi_gmem_ARPROT;
wire   [3:0] grp_seq_read_fu_253_m_axi_gmem_ARQOS;
wire   [3:0] grp_seq_read_fu_253_m_axi_gmem_ARREGION;
wire   [0:0] grp_seq_read_fu_253_m_axi_gmem_ARUSER;
wire    grp_seq_read_fu_253_m_axi_gmem_RREADY;
wire    grp_seq_read_fu_253_m_axi_gmem_BREADY;
wire   [9:0] grp_seq_read_fu_253_buffer_r_address1;
wire    grp_seq_read_fu_253_buffer_r_ce1;
wire    grp_seq_read_fu_253_buffer_r_we1;
wire   [255:0] grp_seq_read_fu_253_buffer_r_d1;
reg    grp_random_read_write_fu_202_ap_start_reg;
reg    grp_random_write_fu_211_ap_start_reg;
reg    grp_random_read_fu_220_ap_start_reg;
reg    grp_seq_write_burst_fu_229_ap_start_reg;
reg    grp_seq_write_fu_237_ap_start_reg;
reg    grp_seq_read_burst_fu_245_ap_start_reg;
reg    grp_seq_read_fu_253_ap_start_reg;
reg    ap_block_state18_io;
reg    ap_block_state33_on_subcall_done;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state57;
wire   [0:0] lnot4_fu_292_p2;
wire   [0:0] lnot18_fu_297_p2;
wire   [0:0] icmp_ln146_fu_302_p2;
reg   [58:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 59'd1;
#0 grp_random_read_write_fu_202_ap_start_reg = 1'b0;
#0 grp_random_write_fu_211_ap_start_reg = 1'b0;
#0 grp_random_read_fu_220_ap_start_reg = 1'b0;
#0 grp_seq_write_burst_fu_229_ap_start_reg = 1'b0;
#0 grp_seq_write_fu_237_ap_start_reg = 1'b0;
#0 grp_seq_read_burst_fu_245_ap_start_reg = 1'b0;
#0 grp_seq_read_fu_253_ap_start_reg = 1'b0;
end

hbm_traffic_gen_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 256 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_GMEM_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(gmem_ARID),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(gmem_ARSIZE),
    .I_ARLOCK(gmem_ARLOCK),
    .I_ARCACHE(gmem_ARCACHE),
    .I_ARQOS(gmem_ARQOS),
    .I_ARPROT(gmem_ARPROT),
    .I_ARUSER(gmem_ARUSER),
    .I_ARBURST(gmem_ARBURST),
    .I_ARREGION(gmem_ARREGION),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_AWADDR),
    .I_AWID(gmem_AWID),
    .I_AWLEN(gmem_AWLEN),
    .I_AWSIZE(gmem_AWSIZE),
    .I_AWLOCK(gmem_AWLOCK),
    .I_AWCACHE(gmem_AWCACHE),
    .I_AWQOS(gmem_AWQOS),
    .I_AWPROT(gmem_AWPROT),
    .I_AWUSER(gmem_AWUSER),
    .I_AWBURST(gmem_AWBURST),
    .I_AWREGION(gmem_AWREGION),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_WDATA),
    .I_WID(gmem_WID),
    .I_WUSER(gmem_WUSER),
    .I_WLAST(gmem_WLAST),
    .I_WSTRB(gmem_WSTRB),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

hbm_traffic_gen_cmd_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_CMD_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_CMD_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_CMD_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_CMD_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_CMD_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_CMD_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_CMD_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_CMD_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_CMD_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_CMD_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_CMD_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_CMD_CACHE_VALUE ))
cmd_m_axi_U(
    .AWVALID(m_axi_cmd_AWVALID),
    .AWREADY(m_axi_cmd_AWREADY),
    .AWADDR(m_axi_cmd_AWADDR),
    .AWID(m_axi_cmd_AWID),
    .AWLEN(m_axi_cmd_AWLEN),
    .AWSIZE(m_axi_cmd_AWSIZE),
    .AWBURST(m_axi_cmd_AWBURST),
    .AWLOCK(m_axi_cmd_AWLOCK),
    .AWCACHE(m_axi_cmd_AWCACHE),
    .AWPROT(m_axi_cmd_AWPROT),
    .AWQOS(m_axi_cmd_AWQOS),
    .AWREGION(m_axi_cmd_AWREGION),
    .AWUSER(m_axi_cmd_AWUSER),
    .WVALID(m_axi_cmd_WVALID),
    .WREADY(m_axi_cmd_WREADY),
    .WDATA(m_axi_cmd_WDATA),
    .WSTRB(m_axi_cmd_WSTRB),
    .WLAST(m_axi_cmd_WLAST),
    .WID(m_axi_cmd_WID),
    .WUSER(m_axi_cmd_WUSER),
    .ARVALID(m_axi_cmd_ARVALID),
    .ARREADY(m_axi_cmd_ARREADY),
    .ARADDR(m_axi_cmd_ARADDR),
    .ARID(m_axi_cmd_ARID),
    .ARLEN(m_axi_cmd_ARLEN),
    .ARSIZE(m_axi_cmd_ARSIZE),
    .ARBURST(m_axi_cmd_ARBURST),
    .ARLOCK(m_axi_cmd_ARLOCK),
    .ARCACHE(m_axi_cmd_ARCACHE),
    .ARPROT(m_axi_cmd_ARPROT),
    .ARQOS(m_axi_cmd_ARQOS),
    .ARREGION(m_axi_cmd_ARREGION),
    .ARUSER(m_axi_cmd_ARUSER),
    .RVALID(m_axi_cmd_RVALID),
    .RREADY(m_axi_cmd_RREADY),
    .RDATA(m_axi_cmd_RDATA),
    .RLAST(m_axi_cmd_RLAST),
    .RID(m_axi_cmd_RID),
    .RUSER(m_axi_cmd_RUSER),
    .RRESP(m_axi_cmd_RRESP),
    .BVALID(m_axi_cmd_BVALID),
    .BREADY(m_axi_cmd_BREADY),
    .BRESP(m_axi_cmd_BRESP),
    .BID(m_axi_cmd_BID),
    .BUSER(m_axi_cmd_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(cmd_ARVALID),
    .I_ARREADY(cmd_ARREADY),
    .I_ARADDR(cmd_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(cmd_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(cmd_RVALID),
    .I_RREADY(cmd_RREADY),
    .I_RDATA(cmd_RDATA),
    .I_RID(cmd_RID),
    .I_RUSER(cmd_RUSER),
    .I_RRESP(cmd_RRESP),
    .I_RLAST(cmd_RLAST),
    .I_AWVALID(cmd_AWVALID),
    .I_AWREADY(cmd_AWREADY),
    .I_AWADDR(cmd_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(cmd_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(cmd_WVALID),
    .I_WREADY(cmd_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(cmd_BVALID),
    .I_BREADY(cmd_BREADY),
    .I_BRESP(cmd_BRESP),
    .I_BID(cmd_BID),
    .I_BUSER(cmd_BUSER)
);

hbm_traffic_gen_buffer #(
    .DataWidth( 256 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(buffer_address0),
    .ce0(buffer_ce0),
    .q0(buffer_q0),
    .address1(buffer_address1),
    .ce1(buffer_ce1),
    .we1(buffer_we1),
    .d1(buffer_d1)
);

hbm_traffic_gen_random_read_write grp_random_read_write_fu_202(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_random_read_write_fu_202_ap_start),
    .ap_done(grp_random_read_write_fu_202_ap_done),
    .ap_idle(grp_random_read_write_fu_202_ap_idle),
    .ap_ready(grp_random_read_write_fu_202_ap_ready),
    .m_axi_gmem_AWVALID(grp_random_read_write_fu_202_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_random_read_write_fu_202_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_random_read_write_fu_202_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_random_read_write_fu_202_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_random_read_write_fu_202_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_random_read_write_fu_202_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_random_read_write_fu_202_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_random_read_write_fu_202_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_random_read_write_fu_202_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_random_read_write_fu_202_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_random_read_write_fu_202_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_random_read_write_fu_202_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_random_read_write_fu_202_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_random_read_write_fu_202_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_random_read_write_fu_202_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_random_read_write_fu_202_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_random_read_write_fu_202_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_random_read_write_fu_202_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_random_read_write_fu_202_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_random_read_write_fu_202_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_random_read_write_fu_202_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_random_read_write_fu_202_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_random_read_write_fu_202_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_random_read_write_fu_202_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_random_read_write_fu_202_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_random_read_write_fu_202_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_random_read_write_fu_202_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_random_read_write_fu_202_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_random_read_write_fu_202_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_random_read_write_fu_202_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_random_read_write_fu_202_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(gmem_RLAST),
    .m_axi_gmem_RID(gmem_RID),
    .m_axi_gmem_RUSER(gmem_RUSER),
    .m_axi_gmem_RRESP(gmem_RRESP),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_random_read_write_fu_202_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(gmem_BRESP),
    .m_axi_gmem_BID(gmem_BID),
    .m_axi_gmem_BUSER(gmem_BUSER),
    .buffer_r_address0(grp_random_read_write_fu_202_buffer_r_address0),
    .buffer_r_ce0(grp_random_read_write_fu_202_buffer_r_ce0),
    .buffer_r_q0(buffer_q0),
    .buffer_r_address1(grp_random_read_write_fu_202_buffer_r_address1),
    .buffer_r_ce1(grp_random_read_write_fu_202_buffer_r_ce1),
    .buffer_r_we1(grp_random_read_write_fu_202_buffer_r_we1),
    .buffer_r_d1(grp_random_read_write_fu_202_buffer_r_d1),
    .size(size_reg_349),
    .range_r(range_reg_360)
);

hbm_traffic_gen_random_write grp_random_write_fu_211(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_random_write_fu_211_ap_start),
    .ap_done(grp_random_write_fu_211_ap_done),
    .ap_idle(grp_random_write_fu_211_ap_idle),
    .ap_ready(grp_random_write_fu_211_ap_ready),
    .m_axi_gmem_AWVALID(grp_random_write_fu_211_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_random_write_fu_211_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_random_write_fu_211_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_random_write_fu_211_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_random_write_fu_211_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_random_write_fu_211_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_random_write_fu_211_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_random_write_fu_211_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_random_write_fu_211_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_random_write_fu_211_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_random_write_fu_211_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_random_write_fu_211_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_random_write_fu_211_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_random_write_fu_211_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_random_write_fu_211_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_random_write_fu_211_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_random_write_fu_211_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_random_write_fu_211_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_random_write_fu_211_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(grp_random_write_fu_211_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_random_write_fu_211_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_random_write_fu_211_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_random_write_fu_211_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_random_write_fu_211_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_random_write_fu_211_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_random_write_fu_211_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_random_write_fu_211_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_random_write_fu_211_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_random_write_fu_211_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_random_write_fu_211_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(grp_random_write_fu_211_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(256'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_random_write_fu_211_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(gmem_BRESP),
    .m_axi_gmem_BID(gmem_BID),
    .m_axi_gmem_BUSER(gmem_BUSER),
    .buffer_r_address0(grp_random_write_fu_211_buffer_r_address0),
    .buffer_r_ce0(grp_random_write_fu_211_buffer_r_ce0),
    .buffer_r_q0(buffer_q0),
    .size(size_reg_349),
    .range_r(range_reg_360)
);

hbm_traffic_gen_random_read grp_random_read_fu_220(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_random_read_fu_220_ap_start),
    .ap_done(grp_random_read_fu_220_ap_done),
    .ap_idle(grp_random_read_fu_220_ap_idle),
    .ap_ready(grp_random_read_fu_220_ap_ready),
    .m_axi_gmem_AWVALID(grp_random_read_fu_220_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_random_read_fu_220_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_random_read_fu_220_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_random_read_fu_220_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_random_read_fu_220_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_random_read_fu_220_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_random_read_fu_220_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_random_read_fu_220_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_random_read_fu_220_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_random_read_fu_220_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_random_read_fu_220_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_random_read_fu_220_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_random_read_fu_220_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_random_read_fu_220_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_random_read_fu_220_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_random_read_fu_220_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_random_read_fu_220_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_random_read_fu_220_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_random_read_fu_220_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_random_read_fu_220_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_random_read_fu_220_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_random_read_fu_220_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_random_read_fu_220_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_random_read_fu_220_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_random_read_fu_220_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_random_read_fu_220_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_random_read_fu_220_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_random_read_fu_220_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_random_read_fu_220_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_random_read_fu_220_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_random_read_fu_220_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(gmem_RLAST),
    .m_axi_gmem_RID(gmem_RID),
    .m_axi_gmem_RUSER(gmem_RUSER),
    .m_axi_gmem_RRESP(gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_random_read_fu_220_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .buffer_r_address1(grp_random_read_fu_220_buffer_r_address1),
    .buffer_r_ce1(grp_random_read_fu_220_buffer_r_ce1),
    .buffer_r_we1(grp_random_read_fu_220_buffer_r_we1),
    .buffer_r_d1(grp_random_read_fu_220_buffer_r_d1),
    .size(size_reg_349),
    .range_r(range_reg_360)
);

hbm_traffic_gen_seq_write_burst grp_seq_write_burst_fu_229(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_seq_write_burst_fu_229_ap_start),
    .ap_done(grp_seq_write_burst_fu_229_ap_done),
    .ap_idle(grp_seq_write_burst_fu_229_ap_idle),
    .ap_ready(grp_seq_write_burst_fu_229_ap_ready),
    .m_axi_gmem_AWVALID(grp_seq_write_burst_fu_229_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_seq_write_burst_fu_229_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_seq_write_burst_fu_229_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_seq_write_burst_fu_229_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_seq_write_burst_fu_229_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_seq_write_burst_fu_229_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_seq_write_burst_fu_229_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_seq_write_burst_fu_229_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_seq_write_burst_fu_229_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_seq_write_burst_fu_229_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_seq_write_burst_fu_229_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_seq_write_burst_fu_229_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_seq_write_burst_fu_229_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_seq_write_burst_fu_229_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_seq_write_burst_fu_229_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_seq_write_burst_fu_229_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_seq_write_burst_fu_229_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_seq_write_burst_fu_229_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_seq_write_burst_fu_229_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(grp_seq_write_burst_fu_229_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_seq_write_burst_fu_229_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_seq_write_burst_fu_229_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_seq_write_burst_fu_229_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_seq_write_burst_fu_229_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_seq_write_burst_fu_229_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_seq_write_burst_fu_229_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_seq_write_burst_fu_229_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_seq_write_burst_fu_229_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_seq_write_burst_fu_229_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_seq_write_burst_fu_229_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(grp_seq_write_burst_fu_229_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(256'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_seq_write_burst_fu_229_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(gmem_BRESP),
    .m_axi_gmem_BID(gmem_BID),
    .m_axi_gmem_BUSER(gmem_BUSER),
    .buffer_r_address0(grp_seq_write_burst_fu_229_buffer_r_address0),
    .buffer_r_ce0(grp_seq_write_burst_fu_229_buffer_r_ce0),
    .buffer_r_q0(buffer_q0),
    .size(size_reg_349)
);

hbm_traffic_gen_seq_write grp_seq_write_fu_237(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_seq_write_fu_237_ap_start),
    .ap_done(grp_seq_write_fu_237_ap_done),
    .ap_idle(grp_seq_write_fu_237_ap_idle),
    .ap_ready(grp_seq_write_fu_237_ap_ready),
    .m_axi_gmem_AWVALID(grp_seq_write_fu_237_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(grp_seq_write_fu_237_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_seq_write_fu_237_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_seq_write_fu_237_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_seq_write_fu_237_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_seq_write_fu_237_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_seq_write_fu_237_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_seq_write_fu_237_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_seq_write_fu_237_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_seq_write_fu_237_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_seq_write_fu_237_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_seq_write_fu_237_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_seq_write_fu_237_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(grp_seq_write_fu_237_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_seq_write_fu_237_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_seq_write_fu_237_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_seq_write_fu_237_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_seq_write_fu_237_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_seq_write_fu_237_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(grp_seq_write_fu_237_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_seq_write_fu_237_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_seq_write_fu_237_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_seq_write_fu_237_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_seq_write_fu_237_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_seq_write_fu_237_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_seq_write_fu_237_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_seq_write_fu_237_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_seq_write_fu_237_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_seq_write_fu_237_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_seq_write_fu_237_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(grp_seq_write_fu_237_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(256'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(grp_seq_write_fu_237_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(gmem_BRESP),
    .m_axi_gmem_BID(gmem_BID),
    .m_axi_gmem_BUSER(gmem_BUSER),
    .buffer_r_address0(grp_seq_write_fu_237_buffer_r_address0),
    .buffer_r_ce0(grp_seq_write_fu_237_buffer_r_ce0),
    .buffer_r_q0(buffer_q0),
    .size(size_reg_349)
);

hbm_traffic_gen_seq_read_burst grp_seq_read_burst_fu_245(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_seq_read_burst_fu_245_ap_start),
    .ap_done(grp_seq_read_burst_fu_245_ap_done),
    .ap_idle(grp_seq_read_burst_fu_245_ap_idle),
    .ap_ready(grp_seq_read_burst_fu_245_ap_ready),
    .m_axi_gmem_AWVALID(grp_seq_read_burst_fu_245_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_seq_read_burst_fu_245_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_seq_read_burst_fu_245_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_seq_read_burst_fu_245_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_seq_read_burst_fu_245_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_seq_read_burst_fu_245_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_seq_read_burst_fu_245_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_seq_read_burst_fu_245_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_seq_read_burst_fu_245_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_seq_read_burst_fu_245_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_seq_read_burst_fu_245_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_seq_read_burst_fu_245_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_seq_read_burst_fu_245_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_seq_read_burst_fu_245_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_seq_read_burst_fu_245_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_seq_read_burst_fu_245_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_seq_read_burst_fu_245_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_seq_read_burst_fu_245_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_seq_read_burst_fu_245_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_seq_read_burst_fu_245_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_seq_read_burst_fu_245_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_seq_read_burst_fu_245_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_seq_read_burst_fu_245_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_seq_read_burst_fu_245_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_seq_read_burst_fu_245_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_seq_read_burst_fu_245_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_seq_read_burst_fu_245_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_seq_read_burst_fu_245_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_seq_read_burst_fu_245_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_seq_read_burst_fu_245_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_seq_read_burst_fu_245_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(gmem_RLAST),
    .m_axi_gmem_RID(gmem_RID),
    .m_axi_gmem_RUSER(gmem_RUSER),
    .m_axi_gmem_RRESP(gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_seq_read_burst_fu_245_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .buffer_r_address1(grp_seq_read_burst_fu_245_buffer_r_address1),
    .buffer_r_ce1(grp_seq_read_burst_fu_245_buffer_r_ce1),
    .buffer_r_we1(grp_seq_read_burst_fu_245_buffer_r_we1),
    .buffer_r_d1(grp_seq_read_burst_fu_245_buffer_r_d1),
    .size(size_reg_349)
);

hbm_traffic_gen_seq_read grp_seq_read_fu_253(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_seq_read_fu_253_ap_start),
    .ap_done(grp_seq_read_fu_253_ap_done),
    .ap_idle(grp_seq_read_fu_253_ap_idle),
    .ap_ready(grp_seq_read_fu_253_ap_ready),
    .m_axi_gmem_AWVALID(grp_seq_read_fu_253_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_seq_read_fu_253_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_seq_read_fu_253_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_seq_read_fu_253_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_seq_read_fu_253_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_seq_read_fu_253_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_seq_read_fu_253_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_seq_read_fu_253_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_seq_read_fu_253_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_seq_read_fu_253_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_seq_read_fu_253_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_seq_read_fu_253_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_seq_read_fu_253_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_seq_read_fu_253_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_seq_read_fu_253_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_seq_read_fu_253_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_seq_read_fu_253_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_seq_read_fu_253_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_seq_read_fu_253_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_seq_read_fu_253_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_seq_read_fu_253_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_seq_read_fu_253_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_seq_read_fu_253_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_seq_read_fu_253_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_seq_read_fu_253_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_seq_read_fu_253_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_seq_read_fu_253_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_seq_read_fu_253_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_seq_read_fu_253_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_seq_read_fu_253_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(grp_seq_read_fu_253_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(gmem_RLAST),
    .m_axi_gmem_RID(gmem_RID),
    .m_axi_gmem_RUSER(gmem_RUSER),
    .m_axi_gmem_RRESP(gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_seq_read_fu_253_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .buffer_r_address1(grp_seq_read_fu_253_buffer_r_address1),
    .buffer_r_ce1(grp_seq_read_fu_253_buffer_r_ce1),
    .buffer_r_we1(grp_seq_read_fu_253_buffer_r_we1),
    .buffer_r_d1(grp_seq_read_fu_253_buffer_r_d1),
    .size(size_reg_349)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_random_read_fu_220_ap_start_reg <= 1'b0;
    end else begin
        if (((pattern_reg_345 == 32'd4) & (cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
            grp_random_read_fu_220_ap_start_reg <= 1'b1;
        end else if ((grp_random_read_fu_220_ap_ready == 1'b1)) begin
            grp_random_read_fu_220_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_random_read_write_fu_202_ap_start_reg <= 1'b0;
    end else begin
        if (((pattern_reg_345 == 32'd6) & (cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
            grp_random_read_write_fu_202_ap_start_reg <= 1'b1;
        end else if ((grp_random_read_write_fu_202_ap_ready == 1'b1)) begin
            grp_random_read_write_fu_202_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_random_write_fu_211_ap_start_reg <= 1'b0;
    end else begin
        if (((pattern_reg_345 == 32'd5) & (cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
            grp_random_write_fu_211_ap_start_reg <= 1'b1;
        end else if ((grp_random_write_fu_211_ap_ready == 1'b1)) begin
            grp_random_write_fu_211_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_seq_read_burst_fu_245_ap_start_reg <= 1'b0;
    end else begin
        if (((pattern_reg_345 == 32'd1) & (cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
            grp_seq_read_burst_fu_245_ap_start_reg <= 1'b1;
        end else if ((grp_seq_read_burst_fu_245_ap_ready == 1'b1)) begin
            grp_seq_read_burst_fu_245_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_seq_read_fu_253_ap_start_reg <= 1'b0;
    end else begin
        if (((pattern_reg_345 == 32'd0) & (cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
            grp_seq_read_fu_253_ap_start_reg <= 1'b1;
        end else if ((grp_seq_read_fu_253_ap_ready == 1'b1)) begin
            grp_seq_read_fu_253_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_seq_write_burst_fu_229_ap_start_reg <= 1'b0;
    end else begin
        if (((pattern_reg_345 == 32'd3) & (cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
            grp_seq_write_burst_fu_229_ap_start_reg <= 1'b1;
        end else if ((grp_seq_write_burst_fu_229_ap_ready == 1'b1)) begin
            grp_seq_write_burst_fu_229_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_seq_write_fu_237_ap_start_reg <= 1'b0;
    end else begin
        if (((pattern_reg_345 == 32'd2) & (cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
            grp_seq_write_fu_237_ap_start_reg <= 1'b1;
        end else if ((grp_seq_write_fu_237_ap_ready == 1'b1)) begin
            grp_seq_write_fu_237_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        cmd_addr_3_read_reg_367 <= cmd_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        cmd_addr_4_read_reg_375 <= cmd_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        cmd_read_reg_337 <= cmd_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        pattern_reg_345 <= cmd_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        range_reg_360 <= cmd_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        size_reg_349 <= cmd_RDATA;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        if ((pattern_reg_345 == 32'd2)) begin
            buffer_address0 = grp_seq_write_fu_237_buffer_r_address0;
        end else if ((pattern_reg_345 == 32'd3)) begin
            buffer_address0 = grp_seq_write_burst_fu_229_buffer_r_address0;
        end else if ((pattern_reg_345 == 32'd5)) begin
            buffer_address0 = grp_random_write_fu_211_buffer_r_address0;
        end else if ((pattern_reg_345 == 32'd6)) begin
            buffer_address0 = grp_random_read_write_fu_202_buffer_r_address0;
        end else begin
            buffer_address0 = 'bx;
        end
    end else begin
        buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        if ((pattern_reg_345 == 32'd0)) begin
            buffer_address1 = grp_seq_read_fu_253_buffer_r_address1;
        end else if ((pattern_reg_345 == 32'd1)) begin
            buffer_address1 = grp_seq_read_burst_fu_245_buffer_r_address1;
        end else if ((pattern_reg_345 == 32'd4)) begin
            buffer_address1 = grp_random_read_fu_220_buffer_r_address1;
        end else if ((pattern_reg_345 == 32'd6)) begin
            buffer_address1 = grp_random_read_write_fu_202_buffer_r_address1;
        end else begin
            buffer_address1 = 'bx;
        end
    end else begin
        buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        if ((pattern_reg_345 == 32'd2)) begin
            buffer_ce0 = grp_seq_write_fu_237_buffer_r_ce0;
        end else if ((pattern_reg_345 == 32'd3)) begin
            buffer_ce0 = grp_seq_write_burst_fu_229_buffer_r_ce0;
        end else if ((pattern_reg_345 == 32'd5)) begin
            buffer_ce0 = grp_random_write_fu_211_buffer_r_ce0;
        end else if ((pattern_reg_345 == 32'd6)) begin
            buffer_ce0 = grp_random_read_write_fu_202_buffer_r_ce0;
        end else begin
            buffer_ce0 = 1'b0;
        end
    end else begin
        buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        if ((pattern_reg_345 == 32'd0)) begin
            buffer_ce1 = grp_seq_read_fu_253_buffer_r_ce1;
        end else if ((pattern_reg_345 == 32'd1)) begin
            buffer_ce1 = grp_seq_read_burst_fu_245_buffer_r_ce1;
        end else if ((pattern_reg_345 == 32'd4)) begin
            buffer_ce1 = grp_random_read_fu_220_buffer_r_ce1;
        end else if ((pattern_reg_345 == 32'd6)) begin
            buffer_ce1 = grp_random_read_write_fu_202_buffer_r_ce1;
        end else begin
            buffer_ce1 = 1'b0;
        end
    end else begin
        buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        if ((pattern_reg_345 == 32'd0)) begin
            buffer_d1 = grp_seq_read_fu_253_buffer_r_d1;
        end else if ((pattern_reg_345 == 32'd1)) begin
            buffer_d1 = grp_seq_read_burst_fu_245_buffer_r_d1;
        end else if ((pattern_reg_345 == 32'd4)) begin
            buffer_d1 = grp_random_read_fu_220_buffer_r_d1;
        end else if ((pattern_reg_345 == 32'd6)) begin
            buffer_d1 = grp_random_read_write_fu_202_buffer_r_d1;
        end else begin
            buffer_d1 = 'bx;
        end
    end else begin
        buffer_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        if ((pattern_reg_345 == 32'd0)) begin
            buffer_we1 = grp_seq_read_fu_253_buffer_r_we1;
        end else if ((pattern_reg_345 == 32'd1)) begin
            buffer_we1 = grp_seq_read_burst_fu_245_buffer_r_we1;
        end else if ((pattern_reg_345 == 32'd4)) begin
            buffer_we1 = grp_random_read_fu_220_buffer_r_we1;
        end else if ((pattern_reg_345 == 32'd6)) begin
            buffer_we1 = grp_random_read_write_fu_202_buffer_r_we1;
        end else begin
            buffer_we1 = 1'b0;
        end
    end else begin
        buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmd_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
        cmd_ARADDR = 64'd7;
    end else if ((~((cmd_ARREADY == 1'b0) | (1'b1 == ap_block_state33_on_subcall_done)) & (1'b1 == ap_CS_fsm_state33))) begin
        cmd_ARADDR = 64'd3;
    end else if (((1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18))) begin
        cmd_ARADDR = 64'd4;
    end else if (((cmd_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        cmd_ARADDR = 64'd0;
    end else begin
        cmd_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18))) begin
        cmd_ARLEN = 32'd3;
    end else if (((~((cmd_ARREADY == 1'b0) | (1'b1 == ap_block_state33_on_subcall_done)) & (1'b1 == ap_CS_fsm_state33)) | ((cmd_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((cmd_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state49)))) begin
        cmd_ARLEN = 32'd1;
    end else begin
        cmd_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((~((cmd_ARREADY == 1'b0) | (1'b1 == ap_block_state33_on_subcall_done)) & (1'b1 == ap_CS_fsm_state33)) | ((cmd_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((cmd_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state49)) | ((1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18)))) begin
        cmd_ARVALID = 1'b1;
    end else begin
        cmd_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((cmd_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
        cmd_AWADDR = 64'd2;
    end else if (((1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18))) begin
        cmd_AWADDR = cmd_addr_reg_307;
    end else if (((cmd_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        cmd_AWADDR = 64'd1;
    end else begin
        cmd_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18)) | ((cmd_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state42)))) begin
        cmd_AWLEN = 32'd1;
    end else if (((cmd_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        cmd_AWLEN = 32'd2;
    end else begin
        cmd_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18)) | ((cmd_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state42)) | ((cmd_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        cmd_AWVALID = 1'b1;
    end else begin
        cmd_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state48)) | ((cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state8)))) begin
        cmd_BREADY = 1'b1;
    end else begin
        cmd_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((cmd_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16)) | ((cmd_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state56)) | ((cmd_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state40)) | ((cmd_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state26)) | ((cmd_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | (~((cmd_RVALID == 1'b0) | (cmd_WREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state27)))) begin
        cmd_RREADY = 1'b1;
    end else begin
        cmd_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((~((cmd_RVALID == 1'b0) | (cmd_WREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state27)) | ((cmd_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43)) | ((cmd_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3)) | ((cmd_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        cmd_WVALID = 1'b1;
    end else begin
        cmd_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state18))) begin
        cmd_blk_n_AR = m_axi_cmd_ARREADY;
    end else begin
        cmd_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state1))) begin
        cmd_blk_n_AW = m_axi_cmd_AWREADY;
    end else begin
        cmd_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state8))) begin
        cmd_blk_n_B = m_axi_cmd_BVALID;
    end else begin
        cmd_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state27))) begin
        cmd_blk_n_R = m_axi_cmd_RVALID;
    end else begin
        cmd_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        cmd_blk_n_W = m_axi_cmd_WREADY;
    end else begin
        cmd_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARADDR = grp_seq_read_fu_253_m_axi_gmem_ARADDR;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARADDR = grp_seq_read_burst_fu_245_m_axi_gmem_ARADDR;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARADDR = grp_random_read_fu_220_m_axi_gmem_ARADDR;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARADDR = grp_random_read_write_fu_202_m_axi_gmem_ARADDR;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARBURST = grp_seq_read_fu_253_m_axi_gmem_ARBURST;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARBURST = grp_seq_read_burst_fu_245_m_axi_gmem_ARBURST;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARBURST = grp_random_read_fu_220_m_axi_gmem_ARBURST;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARBURST = grp_random_read_write_fu_202_m_axi_gmem_ARBURST;
    end else begin
        gmem_ARBURST = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARCACHE = grp_seq_read_fu_253_m_axi_gmem_ARCACHE;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARCACHE = grp_seq_read_burst_fu_245_m_axi_gmem_ARCACHE;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARCACHE = grp_random_read_fu_220_m_axi_gmem_ARCACHE;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARCACHE = grp_random_read_write_fu_202_m_axi_gmem_ARCACHE;
    end else begin
        gmem_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARID = grp_seq_read_fu_253_m_axi_gmem_ARID;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARID = grp_seq_read_burst_fu_245_m_axi_gmem_ARID;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARID = grp_random_read_fu_220_m_axi_gmem_ARID;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARID = grp_random_read_write_fu_202_m_axi_gmem_ARID;
    end else begin
        gmem_ARID = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARLEN = grp_seq_read_fu_253_m_axi_gmem_ARLEN;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARLEN = grp_seq_read_burst_fu_245_m_axi_gmem_ARLEN;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARLEN = grp_random_read_fu_220_m_axi_gmem_ARLEN;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARLEN = grp_random_read_write_fu_202_m_axi_gmem_ARLEN;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARLOCK = grp_seq_read_fu_253_m_axi_gmem_ARLOCK;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARLOCK = grp_seq_read_burst_fu_245_m_axi_gmem_ARLOCK;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARLOCK = grp_random_read_fu_220_m_axi_gmem_ARLOCK;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARLOCK = grp_random_read_write_fu_202_m_axi_gmem_ARLOCK;
    end else begin
        gmem_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARPROT = grp_seq_read_fu_253_m_axi_gmem_ARPROT;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARPROT = grp_seq_read_burst_fu_245_m_axi_gmem_ARPROT;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARPROT = grp_random_read_fu_220_m_axi_gmem_ARPROT;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARPROT = grp_random_read_write_fu_202_m_axi_gmem_ARPROT;
    end else begin
        gmem_ARPROT = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARQOS = grp_seq_read_fu_253_m_axi_gmem_ARQOS;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARQOS = grp_seq_read_burst_fu_245_m_axi_gmem_ARQOS;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARQOS = grp_random_read_fu_220_m_axi_gmem_ARQOS;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARQOS = grp_random_read_write_fu_202_m_axi_gmem_ARQOS;
    end else begin
        gmem_ARQOS = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARREGION = grp_seq_read_fu_253_m_axi_gmem_ARREGION;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARREGION = grp_seq_read_burst_fu_245_m_axi_gmem_ARREGION;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARREGION = grp_random_read_fu_220_m_axi_gmem_ARREGION;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARREGION = grp_random_read_write_fu_202_m_axi_gmem_ARREGION;
    end else begin
        gmem_ARREGION = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARSIZE = grp_seq_read_fu_253_m_axi_gmem_ARSIZE;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARSIZE = grp_seq_read_burst_fu_245_m_axi_gmem_ARSIZE;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARSIZE = grp_random_read_fu_220_m_axi_gmem_ARSIZE;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARSIZE = grp_random_read_write_fu_202_m_axi_gmem_ARSIZE;
    end else begin
        gmem_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARUSER = grp_seq_read_fu_253_m_axi_gmem_ARUSER;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARUSER = grp_seq_read_burst_fu_245_m_axi_gmem_ARUSER;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARUSER = grp_random_read_fu_220_m_axi_gmem_ARUSER;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARUSER = grp_random_read_write_fu_202_m_axi_gmem_ARUSER;
    end else begin
        gmem_ARUSER = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARVALID = grp_seq_read_fu_253_m_axi_gmem_ARVALID;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARVALID = grp_seq_read_burst_fu_245_m_axi_gmem_ARVALID;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARVALID = grp_random_read_fu_220_m_axi_gmem_ARVALID;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_ARVALID = grp_random_read_write_fu_202_m_axi_gmem_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWADDR = grp_seq_write_fu_237_m_axi_gmem_AWADDR;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWADDR = grp_seq_write_burst_fu_229_m_axi_gmem_AWADDR;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWADDR = grp_random_write_fu_211_m_axi_gmem_AWADDR;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWADDR = grp_random_read_write_fu_202_m_axi_gmem_AWADDR;
    end else begin
        gmem_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWBURST = grp_seq_write_fu_237_m_axi_gmem_AWBURST;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWBURST = grp_seq_write_burst_fu_229_m_axi_gmem_AWBURST;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWBURST = grp_random_write_fu_211_m_axi_gmem_AWBURST;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWBURST = grp_random_read_write_fu_202_m_axi_gmem_AWBURST;
    end else begin
        gmem_AWBURST = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWCACHE = grp_seq_write_fu_237_m_axi_gmem_AWCACHE;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWCACHE = grp_seq_write_burst_fu_229_m_axi_gmem_AWCACHE;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWCACHE = grp_random_write_fu_211_m_axi_gmem_AWCACHE;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWCACHE = grp_random_read_write_fu_202_m_axi_gmem_AWCACHE;
    end else begin
        gmem_AWCACHE = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWID = grp_seq_write_fu_237_m_axi_gmem_AWID;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWID = grp_seq_write_burst_fu_229_m_axi_gmem_AWID;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWID = grp_random_write_fu_211_m_axi_gmem_AWID;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWID = grp_random_read_write_fu_202_m_axi_gmem_AWID;
    end else begin
        gmem_AWID = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWLEN = grp_seq_write_fu_237_m_axi_gmem_AWLEN;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWLEN = grp_seq_write_burst_fu_229_m_axi_gmem_AWLEN;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWLEN = grp_random_write_fu_211_m_axi_gmem_AWLEN;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWLEN = grp_random_read_write_fu_202_m_axi_gmem_AWLEN;
    end else begin
        gmem_AWLEN = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWLOCK = grp_seq_write_fu_237_m_axi_gmem_AWLOCK;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWLOCK = grp_seq_write_burst_fu_229_m_axi_gmem_AWLOCK;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWLOCK = grp_random_write_fu_211_m_axi_gmem_AWLOCK;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWLOCK = grp_random_read_write_fu_202_m_axi_gmem_AWLOCK;
    end else begin
        gmem_AWLOCK = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWPROT = grp_seq_write_fu_237_m_axi_gmem_AWPROT;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWPROT = grp_seq_write_burst_fu_229_m_axi_gmem_AWPROT;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWPROT = grp_random_write_fu_211_m_axi_gmem_AWPROT;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWPROT = grp_random_read_write_fu_202_m_axi_gmem_AWPROT;
    end else begin
        gmem_AWPROT = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWQOS = grp_seq_write_fu_237_m_axi_gmem_AWQOS;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWQOS = grp_seq_write_burst_fu_229_m_axi_gmem_AWQOS;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWQOS = grp_random_write_fu_211_m_axi_gmem_AWQOS;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWQOS = grp_random_read_write_fu_202_m_axi_gmem_AWQOS;
    end else begin
        gmem_AWQOS = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWREGION = grp_seq_write_fu_237_m_axi_gmem_AWREGION;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWREGION = grp_seq_write_burst_fu_229_m_axi_gmem_AWREGION;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWREGION = grp_random_write_fu_211_m_axi_gmem_AWREGION;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWREGION = grp_random_read_write_fu_202_m_axi_gmem_AWREGION;
    end else begin
        gmem_AWREGION = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWSIZE = grp_seq_write_fu_237_m_axi_gmem_AWSIZE;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWSIZE = grp_seq_write_burst_fu_229_m_axi_gmem_AWSIZE;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWSIZE = grp_random_write_fu_211_m_axi_gmem_AWSIZE;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWSIZE = grp_random_read_write_fu_202_m_axi_gmem_AWSIZE;
    end else begin
        gmem_AWSIZE = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWUSER = grp_seq_write_fu_237_m_axi_gmem_AWUSER;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWUSER = grp_seq_write_burst_fu_229_m_axi_gmem_AWUSER;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWUSER = grp_random_write_fu_211_m_axi_gmem_AWUSER;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWUSER = grp_random_read_write_fu_202_m_axi_gmem_AWUSER;
    end else begin
        gmem_AWUSER = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWVALID = grp_seq_write_fu_237_m_axi_gmem_AWVALID;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWVALID = grp_seq_write_burst_fu_229_m_axi_gmem_AWVALID;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWVALID = grp_random_write_fu_211_m_axi_gmem_AWVALID;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_AWVALID = grp_random_read_write_fu_202_m_axi_gmem_AWVALID;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_BREADY = grp_seq_write_fu_237_m_axi_gmem_BREADY;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_BREADY = grp_seq_write_burst_fu_229_m_axi_gmem_BREADY;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_BREADY = grp_random_write_fu_211_m_axi_gmem_BREADY;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_BREADY = grp_random_read_write_fu_202_m_axi_gmem_BREADY;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd0) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_RREADY = grp_seq_read_fu_253_m_axi_gmem_RREADY;
    end else if ((((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd1) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_RREADY = grp_seq_read_burst_fu_245_m_axi_gmem_RREADY;
    end else if ((((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd4) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_RREADY = grp_random_read_fu_220_m_axi_gmem_RREADY;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_RREADY = grp_random_read_write_fu_202_m_axi_gmem_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WDATA = grp_seq_write_fu_237_m_axi_gmem_WDATA;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WDATA = grp_seq_write_burst_fu_229_m_axi_gmem_WDATA;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WDATA = grp_random_write_fu_211_m_axi_gmem_WDATA;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WDATA = grp_random_read_write_fu_202_m_axi_gmem_WDATA;
    end else begin
        gmem_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WID = grp_seq_write_fu_237_m_axi_gmem_WID;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WID = grp_seq_write_burst_fu_229_m_axi_gmem_WID;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WID = grp_random_write_fu_211_m_axi_gmem_WID;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WID = grp_random_read_write_fu_202_m_axi_gmem_WID;
    end else begin
        gmem_WID = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WLAST = grp_seq_write_fu_237_m_axi_gmem_WLAST;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WLAST = grp_seq_write_burst_fu_229_m_axi_gmem_WLAST;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WLAST = grp_random_write_fu_211_m_axi_gmem_WLAST;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WLAST = grp_random_read_write_fu_202_m_axi_gmem_WLAST;
    end else begin
        gmem_WLAST = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WSTRB = grp_seq_write_fu_237_m_axi_gmem_WSTRB;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WSTRB = grp_seq_write_burst_fu_229_m_axi_gmem_WSTRB;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WSTRB = grp_random_write_fu_211_m_axi_gmem_WSTRB;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WSTRB = grp_random_read_write_fu_202_m_axi_gmem_WSTRB;
    end else begin
        gmem_WSTRB = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WUSER = grp_seq_write_fu_237_m_axi_gmem_WUSER;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WUSER = grp_seq_write_burst_fu_229_m_axi_gmem_WUSER;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WUSER = grp_random_write_fu_211_m_axi_gmem_WUSER;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WUSER = grp_random_read_write_fu_202_m_axi_gmem_WUSER;
    end else begin
        gmem_WUSER = 'bx;
    end
end

always @ (*) begin
    if ((((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd2) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WVALID = grp_seq_write_fu_237_m_axi_gmem_WVALID;
    end else if ((((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd3) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WVALID = grp_seq_write_burst_fu_229_m_axi_gmem_WVALID;
    end else if ((((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd5) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WVALID = grp_random_write_fu_211_m_axi_gmem_WVALID;
    end else if ((((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state33)) | ((pattern_reg_345 == 32'd6) & (1'b1 == ap_CS_fsm_state32)))) begin
        gmem_WVALID = grp_random_read_write_fu_202_m_axi_gmem_WVALID;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((cmd_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((cmd_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((cmd_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((cmd_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((cmd_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (lnot4_fu_292_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b0 == ap_block_state18_io) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((cmd_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((cmd_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if ((~((cmd_RVALID == 1'b0) | (cmd_WREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if ((~((cmd_ARREADY == 1'b0) | (1'b1 == ap_block_state33_on_subcall_done)) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((cmd_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (lnot18_fu_297_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((cmd_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((cmd_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((cmd_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((cmd_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((cmd_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (icmp_ln146_fu_302_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state18_io = ((cmd_ARREADY == 1'b0) | (cmd_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state33_on_subcall_done = (((grp_seq_read_fu_253_ap_done == 1'b0) & (pattern_reg_345 == 32'd0)) | ((grp_seq_read_burst_fu_245_ap_done == 1'b0) & (pattern_reg_345 == 32'd1)) | ((grp_seq_write_fu_237_ap_done == 1'b0) & (pattern_reg_345 == 32'd2)) | ((grp_seq_write_burst_fu_229_ap_done == 1'b0) & (pattern_reg_345 == 32'd3)) | ((grp_random_read_fu_220_ap_done == 1'b0) & (pattern_reg_345 == 32'd4)) | ((grp_random_write_fu_211_ap_done == 1'b0) & (pattern_reg_345 == 32'd5)) | ((grp_random_read_write_fu_202_ap_done == 1'b0) & (pattern_reg_345 == 32'd6)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cmd_addr_reg_307 = 64'd1;

assign grp_random_read_fu_220_ap_start = grp_random_read_fu_220_ap_start_reg;

assign grp_random_read_write_fu_202_ap_start = grp_random_read_write_fu_202_ap_start_reg;

assign grp_random_write_fu_211_ap_start = grp_random_write_fu_211_ap_start_reg;

assign grp_seq_read_burst_fu_245_ap_start = grp_seq_read_burst_fu_245_ap_start_reg;

assign grp_seq_read_fu_253_ap_start = grp_seq_read_fu_253_ap_start_reg;

assign grp_seq_write_burst_fu_229_ap_start = grp_seq_write_burst_fu_229_ap_start_reg;

assign grp_seq_write_fu_237_ap_start = grp_seq_write_fu_237_ap_start_reg;

assign icmp_ln146_fu_302_p2 = ((cmd_addr_4_read_reg_375 == 32'd0) ? 1'b1 : 1'b0);

assign lnot18_fu_297_p2 = ((cmd_addr_3_read_reg_367 == 32'd0) ? 1'b1 : 1'b0);

assign lnot4_fu_292_p2 = ((cmd_read_reg_337 == 32'd0) ? 1'b1 : 1'b0);

endmodule //hbm_traffic_gen
